[{"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/index.js":"1","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/App.js":"2","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/login/Login.jsx":"3","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/register/Register.jsx":"4","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/StartChat.jsx":"5","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx":"6","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/UsersPage.jsx":"7","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/HomeAdmin.jsx":"8","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/JobsPage.jsx":"9","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/HomeClient.jsx":"10","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/getFlowText.js":"11","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/ActionProvider.js":"12","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MessageParser.js":"13","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/config.js":"14","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/convert_tree_to_json.js":"15","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Approval.jsx":"16","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitles.jsx":"17","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/FieldOptions.jsx":"18","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Areas.jsx":"19","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Companies.jsx":"20","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx":"21","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTypes.jsx":"22","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/EmailDisplay.jsx":"23","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx":"24","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/Quiz.jsx":"25","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/FlashCard.jsx":"26","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/logout/Logout.jsx":"27","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/AccuracyLevels.jsx":"28","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/MoreInfo.jsx":"29","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ExperienceLevel.jsx":"30","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Cities.jsx":"31","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Email.jsx":"32","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitleTyping.jsx":"33","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobCard.jsx":"34","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ClientHistory.jsx":"35","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/UserDetails.jsx":"36","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MyCustomChatMessage.jsx":"37","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ConversationsPage.jsx":"38","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/OfferedJobs.jsx":"39","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/Statistics.jsx":"40","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/UserProvider.js":"41","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/ProtectedRoutes.jsx":"42","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/Header.jsx":"43","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/About.jsx":"44","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CardsTable.jsx":"45","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CollapsableCard.jsx":"46","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ErrorMessages.jsx":"47"},{"size":430,"mtime":1685371810685,"results":"48","hashOfConfig":"49"},{"size":3471,"mtime":1685371810680,"results":"50","hashOfConfig":"49"},{"size":4076,"mtime":1685371810732,"results":"51","hashOfConfig":"49"},{"size":3440,"mtime":1685371810742,"results":"52","hashOfConfig":"49"},{"size":1316,"mtime":1685371810709,"results":"53","hashOfConfig":"49"},{"size":3253,"mtime":1685628898597,"results":"54","hashOfConfig":"49"},{"size":2832,"mtime":1685628898594,"results":"55","hashOfConfig":"49"},{"size":5084,"mtime":1685371810697,"results":"56","hashOfConfig":"49"},{"size":5873,"mtime":1685628898588,"results":"57","hashOfConfig":"49"},{"size":2823,"mtime":1685371810730,"results":"58","hashOfConfig":"49"},{"size":3224,"mtime":1682602741116,"results":"59","hashOfConfig":"49"},{"size":29778,"mtime":1685628898599,"results":"60","hashOfConfig":"49"},{"size":2026,"mtime":1685628898604,"results":"61","hashOfConfig":"49"},{"size":5121,"mtime":1685628898618,"results":"62","hashOfConfig":"49"},{"size":12010,"mtime":1685628898620,"results":"63","hashOfConfig":"49"},{"size":1400,"mtime":1685371810715,"results":"64","hashOfConfig":"49"},{"size":1860,"mtime":1685628898609,"results":"65","hashOfConfig":"49"},{"size":1594,"mtime":1685371810721,"results":"66","hashOfConfig":"49"},{"size":1782,"mtime":1685371810717,"results":"67","hashOfConfig":"49"},{"size":1777,"mtime":1685371810719,"results":"68","hashOfConfig":"49"},{"size":3382,"mtime":1682944246368,"results":"69","hashOfConfig":"49"},{"size":3132,"mtime":1685628898610,"results":"70","hashOfConfig":"49"},{"size":3601,"mtime":1685628898605,"results":"71","hashOfConfig":"49"},{"size":1096,"mtime":1682944246356,"results":"72","hashOfConfig":"49"},{"size":752,"mtime":1682602741114,"results":"73","hashOfConfig":"49"},{"size":669,"mtime":1682188046900,"results":"74","hashOfConfig":"49"},{"size":1063,"mtime":1685628898628,"results":"75","hashOfConfig":"49"},{"size":2542,"mtime":1685371810714,"results":"76","hashOfConfig":"49"},{"size":634,"mtime":1685371810726,"results":"77","hashOfConfig":"49"},{"size":1422,"mtime":1685628898607,"results":"78","hashOfConfig":"49"},{"size":2898,"mtime":1685371810718,"results":"79","hashOfConfig":"49"},{"size":853,"mtime":1682188046871,"results":"80","hashOfConfig":"49"},{"size":763,"mtime":1682188046883,"results":"81","hashOfConfig":"49"},{"size":1521,"mtime":1685628898608,"results":"82","hashOfConfig":"49"},{"size":1937,"mtime":1685628898584,"results":"83","hashOfConfig":"49"},{"size":865,"mtime":1685371810731,"results":"84","hashOfConfig":"49"},{"size":297,"mtime":1682602741107,"results":"85","hashOfConfig":"49"},{"size":2679,"mtime":1685628898585,"results":"86","hashOfConfig":"49"},{"size":2774,"mtime":1685628898589,"results":"87","hashOfConfig":"49"},{"size":7027,"mtime":1685628898591,"results":"88","hashOfConfig":"49"},{"size":478,"mtime":1685371810681,"results":"89","hashOfConfig":"49"},{"size":344,"mtime":1685371810680,"results":"90","hashOfConfig":"49"},{"size":2246,"mtime":1685371810687,"results":"91","hashOfConfig":"49"},{"size":2429,"mtime":1685628898625,"results":"92","hashOfConfig":"49"},{"size":2961,"mtime":1685371810689,"results":"93","hashOfConfig":"49"},{"size":1525,"mtime":1685371810692,"results":"94","hashOfConfig":"49"},{"size":266,"mtime":1685628898606,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kco8gj",{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"132"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/index.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/App.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/login/Login.jsx",["253"],[],"import React from \"react\";\r\n// import \"./login.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// import { useHistory } from 'react-router-dom';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { useUser } from \"../../UserProvider\";\r\n\r\n\r\nexport default function Login({setUserType}) {\r\n  //const {setUserType} = useUser()\r\n  // const history = useHistory();\r\n  let navigate = useNavigate();\r\n  const routeChange = () => {\r\n    navigate(\"/./register\");\r\n  };\r\n\r\n  console.log(setUserType)\r\n\r\n  const moveToChat = () => {\r\n    var userName = document.getElementById(\"LoginUserName\").value;\r\n    var Password = document.getElementById(\"LoginPassword\").value;\r\n    \r\n    // Envoi de la demande POST à votre serveur Flask\r\n    axios.post(\"/login\", {\r\n      userName: userName,\r\n      Password: Password,\r\n    }, {\r\n      headers: {\r\n      'Content-type': 'application/json; charset=UTF-8' } \r\n    })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.message === \"Admin login success\"){\r\n            // setUserType(\"admin\")$$$$$$$$$$$$$$$$$$$\r\n            setUserType({type:\"admin\",details:{userName: userName,password: Password,}})\r\n            navigate(\"/./homePageAdmin\", {\r\n              state: {\r\n                userName: userName,\r\n                password: Password,\r\n              },\r\n            });\r\n          }\r\n          else {\r\n            // setUserType(\"user\")$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\n            setUserType({type:\"client\",details:{userName: userName,password: Password,}})\r\n            navigate(\"/./homePage\", {\r\n              state: {\r\n                userName: userName,\r\n                password: Password,\r\n              },\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          document.getElementById(\"loginfail\").innerHTML =\r\n            response.data.message;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        height: \"100vh\",\r\n        backgroundColor: \"#F1F6F9\",\r\n        color: \"#212A3E\"\r\n      }}\r\n      className=\"w-100 d-flex flex-column align-items-center justify-content-center pb-5\">\r\n      <div className=\"w-50 d-flex flex-column align-items-center \">\r\n        <h1 style={{color: \"#309CFF\"}} className=\"display-1 m-0\">JOBOT</h1>\r\n        <h2 style={{color: \"#309CFF\"}} className=\"m-0\">Login</h2>\r\n        <p className=\"mt-3 mb-4\">With JOBOT you can find your dream job in seconds!</p>\r\n      </div>\r\n      <div \r\n        style={{\r\n          backgroundColor: \"#309CFF\",\r\n          color: \"#212A3E\",\r\n          width: \"35%\",\r\n          borderRadius: \"20px\",\r\n          height:\"35%\"\r\n        }}\r\n        className=\"d-flex flex-column align-items-center p-4\">\r\n        <div className=\"w-100 d-flex flex-column align-items-center\"> \r\n        <TextField\r\n          sx={{\r\n            backgroundColor: \"#F1F6F9\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n          className=\"w-100\"\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          id=\"LoginUserName\"\r\n        />\r\n          <TextField\r\n          sx={{\r\n            backgroundColor: \"#F1F6F9\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n          className=\"mt-2 w-100\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"LoginPassword\"\r\n        />\r\n        </div>\r\n        <div \r\n        style={{\r\n          //backgroundColor: \"red\"\r\n        }}\r\n        className=\"w-100 d-flex flex-row justify-content-between mt-4 \">\r\n\r\n        <Button \r\n        sx={{\r\n          backgroundColor: \"#8AFA63\",\r\n          width: \"50%\"\r\n        }}\r\n        className=\"mx-2\" variant=\"contained\"  onClick={moveToChat}>Login</Button>\r\n        <Button \r\n         sx={{\r\n          backgroundColor: \"#8AFA63\",\r\n          width: \"50%\"\r\n        }}\r\n        className=\"mx-2\" variant=\"contained\" onClick={routeChange}>Register</Button>\r\n        </div>\r\n      </div>\r\n      <br/>\r\n      <div id=\"loginfail\"></div>\r\n    </div>\r\n  );\r\n}\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/register/Register.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/StartChat.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx",["254"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/UsersPage.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/HomeAdmin.jsx",["255","256"],[],"import List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n// import FolderIcon from \"@mui/icons-material/Folder\";\r\nimport SmartToyOutlinedIcon from '@mui/icons-material/SmartToyOutlined';\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport ManageAccountsOutlinedIcon from '@mui/icons-material/ManageAccountsOutlined';\r\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport PieChartIcon from '@mui/icons-material/PieChart';\r\n// import BarChartIcon from '@mui/icons-material/BarChart';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\n// import InfoIcon from '@mui/icons-material/Info';\r\n\r\nexport default function HomeAdmin() {\r\n    const location = useLocation();\r\n    const adminDetails = location.state;\r\n    console.log(adminDetails)\r\n    \r\n    \r\n      const dense = false;\r\n      const secondary = true;\r\n    \r\n      return (\r\n        <div style={{height: \"92vh\"}} className=\"w-100 d-flex flex-column justify-content-center align-items-center pb-5\">\r\n            <h1 style={{color: \"#309CFF\"}}>Welcome Admin!</h1>\r\n        <List dense={dense} className=\"m-3\">\r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/users\">\r\n              <ListItemIcon >\r\n                <PeopleIcon color=\"primary\" fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Users\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/jobs\">\r\n              <ListItemIcon>\r\n                <SearchOutlinedIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Jobs\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/viewChatFlow\">\r\n              <ListItemIcon>\r\n                <AccountTreeIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Chat Flow\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/statistics\">\r\n              <ListItemIcon>\r\n                <PieChartIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Statistics\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/details\" state={adminDetails}>\r\n              <ListItemIcon>\r\n                <ManageAccountsOutlinedIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Admin Details\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/logout\" state={adminDetails}>\r\n              <ListItemIcon>\r\n                <LogoutOutlinedIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Logout\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n        </List>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n// function HomeAdmin() {\r\n//     const location = useLocation();\r\n//     const adminDetails = location.state;\r\n//     console.log(adminDetails)\r\n//   return (\r\n//     <div>\r\n//     <h1>JOBOT Admin</h1>\r\n//     <p>\r\n//     With JOBOT find your dream job in seconds.\r\n//     </p>\r\n//     <nav>\r\n//         <ul>\r\n//             <li>\r\n//                 <Link to=\"/logout\">Log out?</Link>\r\n//             </li>\r\n//             <li>\r\n//                 <Link to=\"/details\" state={adminDetails}>Registration details</Link>\r\n//             </li>\r\n//             <li>\r\n//                 <Link to=\"/about\">About</Link>\r\n//             </li>\r\n//             <li>\r\n//                 <Link to=\"/users\">Users</Link>\r\n//             </li>\r\n//             <li>\r\n//                 <Link to=\"/jobs\">Jobs</Link>\r\n//             </li>\r\n//             <li>\r\n//                 <Link to=\"/viewChatFlow\">Chat Flow</Link>\r\n//             </li>\r\n//             <li>\r\n//                 <Link to=\"/statistics\">Statistics</Link>\r\n//             </li>\r\n//         </ul>\r\n//     </nav>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default HomeAdmin;","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/JobsPage.jsx",["257","258","259"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/HomeClient.jsx",["260"],[],"import List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n// import FolderIcon from \"@mui/icons-material/Folder\";\r\nimport SmartToyOutlinedIcon from '@mui/icons-material/SmartToyOutlined';\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport ManageAccountsOutlinedIcon from '@mui/icons-material/ManageAccountsOutlined';\r\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n    const location = useLocation();\r\n    const clientDetails = location.state;\r\n    console.log(clientDetails)\r\n    \r\n    \r\n      const dense = false;\r\n      const secondary = true;\r\n    \r\n      return (\r\n        <div style={{height: \"92vh\"}} className=\"w-100 d-flex flex-column justify-content-center align-items-center pb-5\">\r\n            <h1 style={{color: \"#309CFF\"}}>Welcome!</h1>\r\n        <List dense={dense} className=\"m-3\">\r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/startChat\" state={clientDetails}>\r\n              <ListItemIcon >\r\n                <SmartToyOutlinedIcon color=\"primary\" fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Start Chat\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/jobs\">\r\n              <ListItemIcon>\r\n                <SearchOutlinedIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Self Job Search\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/details\" state={clientDetails}>\r\n              <ListItemIcon>\r\n                <ManageAccountsOutlinedIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"User Details\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n          <ListItem>\r\n            <IconButton component={Link} to=\"/logout\" state={clientDetails}>\r\n              <ListItemIcon>\r\n                <LogoutOutlinedIcon  color=\"primary\"  fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary=\"Logout\"\r\n              secondary={false}\r\n            />\r\n          </ListItem>\r\n    \r\n        </List>\r\n        </div>\r\n      );\r\n    }\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/getFlowText.js",[],[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/ActionProvider.js",["261","262","263","264","265"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MessageParser.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/config.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/convert_tree_to_json.js",["266","267"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Approval.jsx",["268"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Approval = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"Yes\");\r\n  const [submitted,setSubmitted]=useState(false);\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().options)},[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Y/N radio: \", selectedOption);\r\n    // handle submission logic\r\n    setSubmitted(true);\r\n    props.actionProvider.handleApproval(props.node,selectedOption)\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"radio\"\r\n            value={opt}\r\n            name=\"approval\"\r\n            checked={selectedOption === opt}\r\n            onChange={handleOptionChange} \r\n            />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={submitted}>Submit</button>\r\n    </form>);\r\n};\r\n\r\nexport default Approval;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitles.jsx",["269"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/FieldOptions.jsx",["270"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst FieldOptions = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"Engineering\");\r\n  const [submitted,setSubmitted]=useState(false);\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().children[0].options)},[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options radio: \", selectedOption);\r\n    // handle submission logic\r\n    setSubmitted(true);\r\n    switch(selectedOption) {\r\n      case \"Other\":\r\n        props.actionProvider.handleOtherField(props.node,selectedOption);\r\n        break;\r\n      default:\r\n        props.actionProvider.handleField(props.node,selectedOption);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"radio\"\r\n            value={opt}\r\n            name=\"field\"\r\n            checked={selectedOption === opt}\r\n            onChange={handleOptionChange} \r\n            />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={submitted}>Submit</button>\r\n    </form>);\r\n};\r\n\r\nexport default FieldOptions;\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Areas.jsx",["271"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Areas = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().options)},[]);//maybe props.node_if_options>0\r\n\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.length===3){\r\n      props.actionProvider.handleArea(props.node,[\"All\"]);\r\n    }else{\r\n      props.actionProvider.handleArea(props.node,selectedOptions);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange}/>\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Areas;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Companies.jsx",["272"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Companies = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n\r\n  useEffect(\r\n    ()=>{\r\n        var selectedField=props.node.getSelected().field;\r\n        setOptions(props.node.getNextResponse().options[0][selectedField])\r\n    }\r\n    ,[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    props.actionProvider.handleCompany(props.node,selectedOptions);\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange} />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx",["273"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport JobCard from \"./JobCard.jsx\"\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Jobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [selectedJobId, setSelectedJobId] = useState(null);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n  useEffect(()=>{setOptions([...props.node.getJobs(),{_id:\"Nothing fits\"}])},[]);\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options1: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.includes(\"Nothing fits\")){\r\n      props.node.incCountNotFits(props.node.getCountNotFits());\r\n      console.log(\"count \",props.node.getCountNotFits())\r\n      props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\r\n    }else if((selectedOptions.length<=2)&&props.node.getCountNotFits()===0){\r\n      props.node.incCountNotFits(props.node.getCountNotFits());\r\n      //update selected jobs in state\r\n      if(props.node.getSavedInDB()[\"selected jobs\"]){\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)});\r\n      }else{\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":selectedOptions});\r\n      }\r\n      //\r\n      props.node.setSelectedJobs(selectedOptions)\r\n      console.log(\"selected jobs \",props.node.getSelectedJobs())\r\n      props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\r\n    }else{\r\n      //update selected jobs in state\r\n      if(props.node.getSavedInDB()[\"selected jobs\"]){\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)});\r\n      }else{\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":selectedOptions});\r\n      }\r\n      //\r\n      props.node.setSelectedJobs(selectedOptions)\r\n      props.actionProvider.handleJob(props.node,selectedOptions);\r\n    }\r\n  };\r\n\r\n  const onCardClick = (id) => {\r\n    setSelectedJobId(selectedJobId === id ? null : id);\r\n  };\r\n    \r\n  return(\r\n   <form onSubmit={handleSubmit}>\r\n    {options.map((job,index) => (\r\n      <div key={index}>\r\n          <input\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          value={job._id}\r\n          onChange={handleOptionChange}\r\n          disabled={(job._id!==\"Nothing fits\")&&selectedOptions.includes(\"Nothing fits\")}\r\n          />\r\n          {/* {job._id} */}\r\n\r\n          <JobCard\r\n          key={index}\r\n          job={job}\r\n          isSelected={job._id === selectedJobId}\r\n          onCardClick={onCardClick}\r\n          />\r\n      </div>\r\n      ))\r\n    }\r\n    <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n   </form>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTypes.jsx",["274"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/EmailDisplay.jsx",["275"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx",["276","277"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport JobCard from \"./JobCard.jsx\"\r\n\r\nconst DisplaySelectedJobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedJobId, setSelectedJobId] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    var selectedJobsDetails=[];\r\n    var jobs=props.node.getSavedInDB()[\"displayed jobs\"];\r\n    var selectedJobs=props.node.getSavedInDB()[\"selected jobs\"];\r\n    jobs.map((job)=>{\r\n      if(selectedJobs.includes(job._id)){//#מתוך סך העבודות כולם הצג את כל העבודות שנבחרו בכל השלבים\r\n        selectedJobsDetails.push(job);\r\n      }\r\n    })\r\n    setOptions(selectedJobsDetails)\r\n  },[]);\r\n\r\n  const onCardClick = (id) => {\r\n    setSelectedJobId(selectedJobId === id ? null : id);\r\n  };\r\n\r\n  const buttonsMarkup = options.map((job,index) => (\r\n    <JobCard\r\n    key={index}\r\n    job={job}\r\n    isSelected={job._id === selectedJobId}\r\n    onCardClick={onCardClick}\r\n    />\r\n  ),[]);\r\n\r\n\r\n  return <div>{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default DisplaySelectedJobs;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/Quiz.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/FlashCard.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/logout/Logout.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/AccuracyLevels.jsx",["278"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst AccuracyLevels = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().options)},[]);\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options in accu: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.includes(\"Other\")){\r\n      //קריאה לסיום\r\n      // props.actionProvider.selfSearch(props.node,[\"Other\"]);\r\n\r\n      //set the accuracy node\r\n      props.node.setAccuracyNode({...props.node.getNextResponse()})\r\n      //set in history list\r\n      props.node.setHistoryChat([...props.node.getHistoryChat(),{user:[\"Other\"]}])\r\n      //call handler\r\n      props.actionProvider.handleAccuracyLevel(props.node,[\"Other\"]);\r\n    }else{\r\n      //set the accuracy node and options\r\n      props.node.setAccuracyOptions(selectedOptions)\r\n      props.node.setAccuracyNode({...props.node.getNextResponse()})\r\n      //set in history list\r\n      props.node.setHistoryChat([...props.node.getHistoryChat(),{user:selectedOptions}])\r\n      //call handler\r\n      props.actionProvider.handleAccuracyLevel(props.node,selectedOptions);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            className=\"checkbox\"\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange}\r\n            disabled={(opt!==\"Other\")&&selectedOptions.includes(\"Other\")} />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccuracyLevels;\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/MoreInfo.jsx",["279","280"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst MoreInfo = (props) => {\r\n\r\n    function moreInfo(){\r\n        return (\r\n            <div>\r\n                For more information click <a href=\"../../../about\">here</a>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    function selfJobSearch(){\r\n        return (\r\n            <div>\r\n                To self job search click <a href=\"/jobs\">here</a>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    return (\r\n        (props.node.getSelected().field===\"Other\")?moreInfo():selfJobSearch()\r\n    );\r\n};\r\n\r\nexport default MoreInfo;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ExperienceLevel.jsx",["281"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Cities.jsx",["282"],[],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst EmailDisplay = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n  //set the updated existing cities from the jobs DB\r\n  useEffect(\r\n    ()=>{\r\n      axios.post(\"/cities\",{\r\n        areas:props.node.getSelected().areas\r\n      }, {\r\n        headers: {\r\n        'Content-type': 'application/json; charset=UTF-8' } \r\n      })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setOptions([...response.data.cities,\"Other\"])\r\n        } else {\r\n          console.log(\"Server did not returned cities\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error getting cities\", err.message);\r\n      });\r\n    }\r\n    ,[]);\r\n  \r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options1: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.includes(\"Other\")){\r\n      props.actionProvider.handleCities(props.node,[\"Other\"]);\r\n    }else{\r\n      props.actionProvider.handleCities(props.node,selectedOptions);\r\n    }\r\n  };\r\n  //We used chatGpt to divide the cities into 3 columns\r\n  const columnSize = Math.ceil(options.length / 3);\r\n  const columns = [\r\n    options.slice(0, columnSize),\r\n    options.slice(columnSize, columnSize * 2),\r\n    options.slice(columnSize * 2),\r\n  ];\r\n\r\n  const renderCheckbox = (opt) => (\r\n    <div key={opt} className=\"cities\">\r\n      <label>\r\n      <input\r\n      className=\"checkbox\"\r\n      type=\"checkbox\"\r\n      value={opt}\r\n      onChange={handleOptionChange}\r\n      disabled={(opt!==\"Other\")&&selectedOptions.includes(\"Other\")} />\r\n      {opt}\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  const renderColumns = (columnCities,index) => (\r\n    <div key={index}>\r\n      {columnCities.map(city => renderCheckbox(city))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        <div style={{ display: 'flex' }}>\r\n        {\r\n          columns.map((columnCities,index) => renderColumns(columnCities,index))\r\n        }\r\n        </div>\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n\r\n};\r\n\r\nexport default EmailDisplay;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Email.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitleTyping.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobCard.jsx",["283"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ClientHistory.jsx",["284"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/UserDetails.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MyCustomChatMessage.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ConversationsPage.jsx",["285","286"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/OfferedJobs.jsx",["287","288","289","290"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/Statistics.jsx",["291"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/UserProvider.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/ProtectedRoutes.jsx",["292"],[],"import { Navigate, Outlet } from \"react-router-dom\";\r\nimport Login from \"./pages/login/Login.jsx\";\r\nimport { useUser } from \"./UserProvider.js\";\r\n\r\n\r\nconst ProtectedRoutes = ({setUserType}) => {\r\n  const {userType} = useUser();\r\n  return userType !== \"\" ? <Outlet /> : <Login  setUserType={setUserType}/>;\r\n};\r\n\r\nexport default ProtectedRoutes;","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/Header.jsx",["293","294","295","296"],[],"import Button from '@mui/material/Button';\r\nimport JobotLogoPNG from \"./JOBOT.png\";\r\n\r\n//$$$$$$$$$$$$\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { Link } from 'react-router-dom';\r\nimport SmartToyOutlinedIcon from '@mui/icons-material/SmartToyOutlined';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\n\r\n\r\n//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\nexport default function Header({userType}) {\r\n  // const headerKind = \"admin\" // useContext()\r\n  return (\r\n    <div className=\"d-flex justify-content-between align-items-center px-5\" style={{backgroundColor:\"#59698b\",height:\"8vh\"}}>\r\n      <div>\r\n        <img src={JobotLogoPNG} style={{width:\"45%\"}}/>\r\n      </div>\r\n      <div>\r\n       <ListItem>\r\n            <IconButton component={Link} to=\"/about\">\r\n              <ListItemIcon>\r\n                <InfoIcon color=\"primary\" fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary={false}\r\n              secondary={false}\r\n            />\r\n        </ListItem>\r\n      </div>\r\n\r\n\r\n        {/* {userType[\"type\"] === \"admin\" ? \r\n        <div className=\"d-flex justify-content-right\">\r\n          <Button style={{color:\"#F1F6F9\"}}>ADMIN</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>ADMIN</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>ADMIN</Button>\r\n        </div>\r\n        : null}\r\n        {userType[\"type\"] === \"client\" ? \r\n        <div className=\"d-flex justify-content-right\">\r\n          <Button style={{color:\"#F1F6F9\"}}>USER</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>USER</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>USER</Button>\r\n        </div>\r\n        : null}\r\n         {userType[\"type\"] === null ? \r\n        <div className=\"d-flex justify-content-right\">\r\n          <Button style={{color:\"#F1F6F9\"}}>not logged in</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>not logged in</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>not logged in</Button>\r\n        </div>\r\n        : null} */}\r\n    </div>\r\n  );\r\n}\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/About.jsx",["297"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CardsTable.jsx",["298","299"],[],"import {useState} from 'react'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Pagination, Box} from \"@mui/material\"\r\nimport { CollapsableCard } from './CollapsableCard'\r\n\r\n\r\nexport const CardsTable = ({data}) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10;\r\n    const totalItems = data.length;\r\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n    const handlePageChange = (e, page) => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const generateTableData = (data) => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        const currentPageData = data.slice(startIndex, endIndex)\r\n        //let tableData = []\r\n\r\n        // for (let i = 0; i < currentPageData.length; i++) {\r\n        //     let job = currentPageData[i]\r\n        //     tableData.push(\r\n        //         <TableRow key={i}>\r\n        //             <TableCell>\r\n        //                 <CollapsableCard\r\n        //                     content={job.content.job}\r\n        //                     collapsableContent={job.collapsableContent.rating}\r\n        //                 />\r\n        //             </TableCell>\r\n        //         </TableRow>\r\n        //     )\r\n        // }\r\n        \r\n\r\n        return currentPageData\r\n    }\r\n\r\n    const tableData = generateTableData(data);\r\n\r\n    return (\r\n        <div className=\"w-50 d-flex flex-column mx-auto align-items-center justify-cotnent-center\">\r\n            <TableContainer>\r\n                <Table >\r\n                    <TableBody>\r\n                        {tableData.map((job, index)  => {\r\n                             return (\r\n                             <TableRow key={index}>\r\n                                <TableCell>\r\n                                    <CollapsableCard\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            flexDirection: 'column',\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"Center\",\r\n                                            // margin: \"0 2rem\",\r\n                                            width: \"100%\"\r\n                                        }}\r\n                                        content={job.content}\r\n                                        collapsableContent={job.collapsableContent}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            )\r\n                         })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Pagination\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={handlePageChange}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CollapsableCard.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ErrorMessages.jsx",[],[],{"ruleId":"300","severity":1,"message":"301","line":8,"column":10,"nodeType":"302","messageId":"303","endLine":8,"endColumn":17},{"ruleId":"300","severity":1,"message":"304","line":10,"column":20,"nodeType":"302","messageId":"303","endLine":10,"endColumn":31},{"ruleId":"300","severity":1,"message":"305","line":7,"column":8,"nodeType":"302","messageId":"303","endLine":7,"endColumn":28},{"ruleId":"300","severity":1,"message":"306","line":27,"column":13,"nodeType":"302","messageId":"303","endLine":27,"endColumn":22},{"ruleId":"300","severity":1,"message":"307","line":7,"column":9,"nodeType":"302","messageId":"303","endLine":7,"endColumn":24},{"ruleId":"300","severity":1,"message":"308","line":9,"column":10,"nodeType":"302","messageId":"303","endLine":9,"endColumn":14},{"ruleId":"309","severity":1,"message":"310","line":50,"column":17,"nodeType":"311","messageId":"312","endLine":50,"endColumn":18},{"ruleId":"300","severity":1,"message":"306","line":21,"column":13,"nodeType":"302","messageId":"303","endLine":21,"endColumn":22},{"ruleId":"313","severity":1,"message":"314","line":189,"column":13,"nodeType":"302","messageId":"315","endLine":189,"endColumn":16},{"ruleId":"313","severity":1,"message":"314","line":206,"column":13,"nodeType":"302","messageId":"315","endLine":206,"endColumn":16},{"ruleId":"313","severity":1,"message":"316","line":318,"column":15,"nodeType":"302","messageId":"315","endLine":318,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":406,"column":11,"nodeType":"302","messageId":"315","endLine":406,"endColumn":14},{"ruleId":"313","severity":1,"message":"316","line":739,"column":15,"nodeType":"302","messageId":"315","endLine":739,"endColumn":19},{"ruleId":"300","severity":1,"message":"317","line":19,"column":9,"nodeType":"302","messageId":"303","endLine":19,"endColumn":17},{"ruleId":"300","severity":1,"message":"318","line":210,"column":13,"nodeType":"302","messageId":"303","endLine":210,"endColumn":28},{"ruleId":"319","severity":1,"message":"320","line":11,"column":68,"nodeType":"321","endLine":11,"endColumn":70,"suggestions":"322"},{"ruleId":"319","severity":1,"message":"320","line":16,"column":6,"nodeType":"321","endLine":16,"endColumn":8,"suggestions":"323"},{"ruleId":"319","severity":1,"message":"320","line":11,"column":80,"nodeType":"321","endLine":11,"endColumn":82,"suggestions":"324"},{"ruleId":"319","severity":1,"message":"320","line":12,"column":68,"nodeType":"321","endLine":12,"endColumn":70,"suggestions":"325"},{"ruleId":"319","severity":1,"message":"320","line":17,"column":6,"nodeType":"321","endLine":17,"endColumn":8,"suggestions":"326"},{"ruleId":"319","severity":1,"message":"320","line":14,"column":78,"nodeType":"321","endLine":14,"endColumn":80,"suggestions":"327"},{"ruleId":"319","severity":1,"message":"320","line":70,"column":68,"nodeType":"321","endLine":70,"endColumn":70,"suggestions":"328"},{"ruleId":"319","severity":1,"message":"320","line":78,"column":68,"nodeType":"321","endLine":78,"endColumn":70,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":14,"column":19,"nodeType":"332","messageId":"333","endLine":14,"endColumn":21},{"ruleId":"319","severity":1,"message":"334","line":20,"column":5,"nodeType":"321","endLine":20,"endColumn":7,"suggestions":"335"},{"ruleId":"319","severity":1,"message":"320","line":11,"column":68,"nodeType":"321","endLine":11,"endColumn":70,"suggestions":"336"},{"ruleId":"300","severity":1,"message":"337","line":2,"column":9,"nodeType":"302","messageId":"303","endLine":2,"endColumn":17},{"ruleId":"300","severity":1,"message":"338","line":2,"column":18,"nodeType":"302","messageId":"303","endLine":2,"endColumn":27},{"ruleId":"319","severity":1,"message":"320","line":11,"column":68,"nodeType":"321","endLine":11,"endColumn":70,"suggestions":"339"},{"ruleId":"319","severity":1,"message":"334","line":32,"column":6,"nodeType":"321","endLine":32,"endColumn":8,"suggestions":"340"},{"ruleId":"309","severity":1,"message":"310","line":30,"column":23,"nodeType":"311","messageId":"312","endLine":30,"endColumn":24},{"ruleId":"300","severity":1,"message":"341","line":2,"column":23,"nodeType":"302","messageId":"303","endLine":2,"endColumn":34},{"ruleId":"300","severity":1,"message":"342","line":2,"column":10,"nodeType":"302","messageId":"303","endLine":2,"endColumn":21},{"ruleId":"319","severity":1,"message":"343","line":19,"column":6,"nodeType":"321","endLine":19,"endColumn":8,"suggestions":"344"},{"ruleId":"300","severity":1,"message":"342","line":2,"column":10,"nodeType":"302","messageId":"303","endLine":2,"endColumn":21},{"ruleId":"319","severity":1,"message":"345","line":24,"column":6,"nodeType":"321","endLine":24,"endColumn":8,"suggestions":"346"},{"ruleId":"347","severity":1,"message":"348","line":27,"column":18,"nodeType":"311","messageId":"349","endLine":27,"endColumn":20},{"ruleId":"309","severity":1,"message":"310","line":56,"column":17,"nodeType":"311","messageId":"312","endLine":56,"endColumn":18},{"ruleId":"319","severity":1,"message":"350","line":91,"column":7,"nodeType":"321","endLine":91,"endColumn":9,"suggestions":"351"},{"ruleId":"300","severity":1,"message":"352","line":1,"column":10,"nodeType":"302","messageId":"303","endLine":1,"endColumn":18},{"ruleId":"300","severity":1,"message":"353","line":1,"column":8,"nodeType":"302","messageId":"303","endLine":1,"endColumn":14},{"ruleId":"300","severity":1,"message":"354","line":5,"column":8,"nodeType":"302","messageId":"303","endLine":5,"endColumn":12},{"ruleId":"300","severity":1,"message":"305","line":11,"column":8,"nodeType":"302","messageId":"303","endLine":11,"endColumn":28},{"ruleId":"355","severity":1,"message":"356","line":22,"column":9,"nodeType":"357","endLine":22,"endColumn":56},{"ruleId":"355","severity":1,"message":"356","line":42,"column":9,"nodeType":"357","endLine":42,"endColumn":56},{"ruleId":"300","severity":1,"message":"358","line":2,"column":55,"nodeType":"302","messageId":"303","endLine":2,"endColumn":64},{"ruleId":"300","severity":1,"message":"359","line":2,"column":88,"nodeType":"302","messageId":"303","endLine":2,"endColumn":91},"no-unused-vars","'useUser' is defined but never used.","Identifier","unusedVar","'setMyObject' is assigned a value but never used.","'SmartToyOutlinedIcon' is defined but never used.","'secondary' is assigned a value but never used.","'CollapsableCard' is defined but never used.","'blue' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-redeclare","'txt' is already defined.","redeclared","'txt2' is already defined.","'jobTypes' is assigned a value but never used.","'specificCompany' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.node'. Either include it or remove the dependency array. If 'setOptions' needs the current value of 'props.node', you can also switch to useReducer instead of useState and read 'props.node' in the reducer.","ArrayExpression",["360"],["361"],["362"],["363"],["364"],["365"],["366"],["367"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.node'. Either include it or remove the dependency array.",["368"],["369"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["370"],["371"],"'useNavigate' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchHistory'. Either include it or remove the dependency array.",["372"],"React Hook useEffect has a missing dependency: 'fetchjobs'. Either include it or remove the dependency array.",["373"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'fetchStatistics'. Either include it or remove the dependency array.",["374"],"'Navigate' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TableHead' is defined but never used.","'Box' is defined but never used.",{"desc":"375","fix":"376"},{"desc":"375","fix":"377"},{"desc":"375","fix":"378"},{"desc":"375","fix":"379"},{"desc":"375","fix":"380"},{"desc":"375","fix":"381"},{"desc":"375","fix":"382"},{"desc":"375","fix":"383"},{"desc":"375","fix":"384"},{"desc":"375","fix":"385"},{"desc":"375","fix":"386"},{"desc":"375","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [props.node]",{"range":"394","text":"395"},{"range":"396","text":"395"},{"range":"397","text":"395"},{"range":"398","text":"395"},{"range":"399","text":"395"},{"range":"400","text":"395"},{"range":"401","text":"395"},{"range":"402","text":"395"},{"range":"403","text":"395"},{"range":"404","text":"395"},{"range":"405","text":"395"},{"range":"406","text":"395"},"Update the dependencies array to be: [fetchHistory]",{"range":"407","text":"408"},"Update the dependencies array to be: [fetchjobs]",{"range":"409","text":"410"},"Update the dependencies array to be: [fetchStatistics]",{"range":"411","text":"412"},[362,364],"[props.node]",[466,468],[386,388],[359,361],[468,470],[466,468],[2152,2154],[2549,2551],[664,666],[366,368],[372,374],[912,914],[627,629],"[fetchHistory]",[764,766],"[fetchjobs]",[2555,2557],"[fetchStatistics]"]