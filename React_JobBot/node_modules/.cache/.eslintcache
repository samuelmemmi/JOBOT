[{"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/index.js":"1","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/App.js":"2","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/login/Login.jsx":"3","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/register/Register.jsx":"4","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/StartChat.jsx":"5","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx":"6","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/UsersPage.jsx":"7","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/HomeAdmin.jsx":"8","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/JobsPage.jsx":"9","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/HomeClient.jsx":"10","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/getFlowText.js":"11","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/ActionProvider.js":"12","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MessageParser.js":"13","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/config.js":"14","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/convert_tree_to_json.js":"15","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Approval.jsx":"16","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitles.jsx":"17","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/FieldOptions.jsx":"18","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Areas.jsx":"19","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Companies.jsx":"20","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx":"21","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTypes.jsx":"22","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/EmailDisplay.jsx":"23","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx":"24","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/Quiz.jsx":"25","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/FlashCard.jsx":"26","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/logout/Logout.jsx":"27","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/AccuracyLevels.jsx":"28","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/MoreInfo.jsx":"29","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ExperienceLevel.jsx":"30","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Cities.jsx":"31","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Email.jsx":"32","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitleTyping.jsx":"33","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobCard.jsx":"34","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ClientHistory.jsx":"35","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/UserDetails.jsx":"36","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MyCustomChatMessage.jsx":"37","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ConversationsPage.jsx":"38","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/OfferedJobs.jsx":"39","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/Statistics.jsx":"40","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/UserProvider.js":"41","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/ProtectedRoutes.jsx":"42","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/Header.jsx":"43","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/About.jsx":"44","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CardsTable.jsx":"45","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CollapsableCard.jsx":"46","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ErrorMessages.jsx":"47"},{"size":430,"mtime":1685371810685,"results":"48","hashOfConfig":"49"},{"size":3471,"mtime":1685371810680,"results":"50","hashOfConfig":"49"},{"size":3808,"mtime":1685641010187,"results":"51","hashOfConfig":"49"},{"size":3438,"mtime":1685641010195,"results":"52","hashOfConfig":"49"},{"size":1672,"mtime":1685641010169,"results":"53","hashOfConfig":"49"},{"size":3253,"mtime":1685628898597,"results":"54","hashOfConfig":"49"},{"size":2832,"mtime":1685628898594,"results":"55","hashOfConfig":"49"},{"size":5259,"mtime":1685641010167,"results":"56","hashOfConfig":"49"},{"size":5873,"mtime":1685628898588,"results":"57","hashOfConfig":"49"},{"size":2908,"mtime":1685641010183,"results":"58","hashOfConfig":"49"},{"size":3231,"mtime":1685641010181,"results":"59","hashOfConfig":"49"},{"size":29778,"mtime":1685628898599,"results":"60","hashOfConfig":"49"},{"size":2026,"mtime":1685628898604,"results":"61","hashOfConfig":"49"},{"size":5121,"mtime":1685628898618,"results":"62","hashOfConfig":"49"},{"size":12010,"mtime":1685628898620,"results":"63","hashOfConfig":"49"},{"size":1400,"mtime":1685371810715,"results":"64","hashOfConfig":"49"},{"size":1860,"mtime":1685628898609,"results":"65","hashOfConfig":"49"},{"size":1594,"mtime":1685371810721,"results":"66","hashOfConfig":"49"},{"size":1782,"mtime":1685371810717,"results":"67","hashOfConfig":"49"},{"size":1777,"mtime":1685371810719,"results":"68","hashOfConfig":"49"},{"size":3382,"mtime":1682944246368,"results":"69","hashOfConfig":"49"},{"size":3132,"mtime":1685628898610,"results":"70","hashOfConfig":"49"},{"size":3601,"mtime":1685628898605,"results":"71","hashOfConfig":"49"},{"size":1814,"mtime":1685641010173,"results":"72","hashOfConfig":"49"},{"size":752,"mtime":1682602741114,"results":"73","hashOfConfig":"49"},{"size":669,"mtime":1682188046900,"results":"74","hashOfConfig":"49"},{"size":1105,"mtime":1685641010190,"results":"75","hashOfConfig":"49"},{"size":2542,"mtime":1685371810714,"results":"76","hashOfConfig":"49"},{"size":634,"mtime":1685371810726,"results":"77","hashOfConfig":"49"},{"size":1422,"mtime":1685628898607,"results":"78","hashOfConfig":"49"},{"size":2898,"mtime":1685371810718,"results":"79","hashOfConfig":"49"},{"size":853,"mtime":1682188046871,"results":"80","hashOfConfig":"49"},{"size":763,"mtime":1682188046883,"results":"81","hashOfConfig":"49"},{"size":1521,"mtime":1685628898608,"results":"82","hashOfConfig":"49"},{"size":2101,"mtime":1685641010165,"results":"83","hashOfConfig":"49"},{"size":1070,"mtime":1685641010185,"results":"84","hashOfConfig":"49"},{"size":297,"mtime":1682602741107,"results":"85","hashOfConfig":"49"},{"size":2679,"mtime":1685628898585,"results":"86","hashOfConfig":"49"},{"size":2828,"mtime":1685641010168,"results":"87","hashOfConfig":"49"},{"size":7027,"mtime":1685628898591,"results":"88","hashOfConfig":"49"},{"size":478,"mtime":1685371810681,"results":"89","hashOfConfig":"49"},{"size":363,"mtime":1685641010163,"results":"90","hashOfConfig":"49"},{"size":2246,"mtime":1685371810687,"results":"91","hashOfConfig":"49"},{"size":2429,"mtime":1685628898625,"results":"92","hashOfConfig":"49"},{"size":2961,"mtime":1685371810689,"results":"93","hashOfConfig":"49"},{"size":1525,"mtime":1685371810692,"results":"94","hashOfConfig":"49"},{"size":266,"mtime":1685628898606,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kco8gj",{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/index.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/App.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/login/Login.jsx",["248"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/register/Register.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/StartChat.jsx",["249","250","251"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx",["252"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/UsersPage.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/HomeAdmin.jsx",["253","254","255"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/JobsPage.jsx",["256","257","258"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/HomeClient.jsx",["259","260"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/getFlowText.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/ActionProvider.js",["261","262","263","264","265"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MessageParser.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/config.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/convert_tree_to_json.js",["266","267"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Approval.jsx",["268"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Approval = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"Yes\");\r\n  const [submitted,setSubmitted]=useState(false);\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().options)},[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Y/N radio: \", selectedOption);\r\n    // handle submission logic\r\n    setSubmitted(true);\r\n    props.actionProvider.handleApproval(props.node,selectedOption)\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"radio\"\r\n            value={opt}\r\n            name=\"approval\"\r\n            checked={selectedOption === opt}\r\n            onChange={handleOptionChange} \r\n            />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={submitted}>Submit</button>\r\n    </form>);\r\n};\r\n\r\nexport default Approval;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitles.jsx",["269"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/FieldOptions.jsx",["270"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst FieldOptions = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"Engineering\");\r\n  const [submitted,setSubmitted]=useState(false);\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().children[0].options)},[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options radio: \", selectedOption);\r\n    // handle submission logic\r\n    setSubmitted(true);\r\n    switch(selectedOption) {\r\n      case \"Other\":\r\n        props.actionProvider.handleOtherField(props.node,selectedOption);\r\n        break;\r\n      default:\r\n        props.actionProvider.handleField(props.node,selectedOption);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"radio\"\r\n            value={opt}\r\n            name=\"field\"\r\n            checked={selectedOption === opt}\r\n            onChange={handleOptionChange} \r\n            />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={submitted}>Submit</button>\r\n    </form>);\r\n};\r\n\r\nexport default FieldOptions;\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Areas.jsx",["271"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Areas = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().options)},[]);//maybe props.node_if_options>0\r\n\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.length===3){\r\n      props.actionProvider.handleArea(props.node,[\"All\"]);\r\n    }else{\r\n      props.actionProvider.handleArea(props.node,selectedOptions);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange}/>\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Areas;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Companies.jsx",["272"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Companies = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n\r\n  useEffect(\r\n    ()=>{\r\n        var selectedField=props.node.getSelected().field;\r\n        setOptions(props.node.getNextResponse().options[0][selectedField])\r\n    }\r\n    ,[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    props.actionProvider.handleCompany(props.node,selectedOptions);\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange} />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx",["273"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport JobCard from \"./JobCard.jsx\"\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Jobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [selectedJobId, setSelectedJobId] = useState(null);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n  useEffect(()=>{setOptions([...props.node.getJobs(),{_id:\"Nothing fits\"}])},[]);\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options1: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.includes(\"Nothing fits\")){\r\n      props.node.incCountNotFits(props.node.getCountNotFits());\r\n      console.log(\"count \",props.node.getCountNotFits())\r\n      props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\r\n    }else if((selectedOptions.length<=2)&&props.node.getCountNotFits()===0){\r\n      props.node.incCountNotFits(props.node.getCountNotFits());\r\n      //update selected jobs in state\r\n      if(props.node.getSavedInDB()[\"selected jobs\"]){\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)});\r\n      }else{\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":selectedOptions});\r\n      }\r\n      //\r\n      props.node.setSelectedJobs(selectedOptions)\r\n      console.log(\"selected jobs \",props.node.getSelectedJobs())\r\n      props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\r\n    }else{\r\n      //update selected jobs in state\r\n      if(props.node.getSavedInDB()[\"selected jobs\"]){\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)});\r\n      }else{\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":selectedOptions});\r\n      }\r\n      //\r\n      props.node.setSelectedJobs(selectedOptions)\r\n      props.actionProvider.handleJob(props.node,selectedOptions);\r\n    }\r\n  };\r\n\r\n  const onCardClick = (id) => {\r\n    setSelectedJobId(selectedJobId === id ? null : id);\r\n  };\r\n    \r\n  return(\r\n   <form onSubmit={handleSubmit}>\r\n    {options.map((job,index) => (\r\n      <div key={index}>\r\n          <input\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          value={job._id}\r\n          onChange={handleOptionChange}\r\n          disabled={(job._id!==\"Nothing fits\")&&selectedOptions.includes(\"Nothing fits\")}\r\n          />\r\n          {/* {job._id} */}\r\n\r\n          <JobCard\r\n          key={index}\r\n          job={job}\r\n          isSelected={job._id === selectedJobId}\r\n          onCardClick={onCardClick}\r\n          />\r\n      </div>\r\n      ))\r\n    }\r\n    <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n   </form>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n",[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTypes.jsx",["274"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/EmailDisplay.jsx",["275"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx",["276","277"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/Quiz.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Quiz/FlashCard.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/logout/Logout.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/AccuracyLevels.jsx",["278"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst AccuracyLevels = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n  useEffect(()=>{setOptions(props.node.getNextResponse().options)},[]);\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options in accu: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.includes(\"Other\")){\r\n      //קריאה לסיום\r\n      // props.actionProvider.selfSearch(props.node,[\"Other\"]);\r\n\r\n      //set the accuracy node\r\n      props.node.setAccuracyNode({...props.node.getNextResponse()})\r\n      //set in history list\r\n      props.node.setHistoryChat([...props.node.getHistoryChat(),{user:[\"Other\"]}])\r\n      //call handler\r\n      props.actionProvider.handleAccuracyLevel(props.node,[\"Other\"]);\r\n    }else{\r\n      //set the accuracy node and options\r\n      props.node.setAccuracyOptions(selectedOptions)\r\n      props.node.setAccuracyNode({...props.node.getNextResponse()})\r\n      //set in history list\r\n      props.node.setHistoryChat([...props.node.getHistoryChat(),{user:selectedOptions}])\r\n      //call handler\r\n      props.actionProvider.handleAccuracyLevel(props.node,selectedOptions);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            className=\"checkbox\"\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange}\r\n            disabled={(opt!==\"Other\")&&selectedOptions.includes(\"Other\")} />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccuracyLevels;\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/MoreInfo.jsx",["279","280"],[],"import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst MoreInfo = (props) => {\r\n\r\n    function moreInfo(){\r\n        return (\r\n            <div>\r\n                For more information click <a href=\"../../../about\">here</a>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    function selfJobSearch(){\r\n        return (\r\n            <div>\r\n                To self job search click <a href=\"/jobs\">here</a>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    return (\r\n        (props.node.getSelected().field===\"Other\")?moreInfo():selfJobSearch()\r\n    );\r\n};\r\n\r\nexport default MoreInfo;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ExperienceLevel.jsx",["281"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Cities.jsx",["282"],[],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst EmailDisplay = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n  //set the updated existing cities from the jobs DB\r\n  useEffect(\r\n    ()=>{\r\n      axios.post(\"/cities\",{\r\n        areas:props.node.getSelected().areas\r\n      }, {\r\n        headers: {\r\n        'Content-type': 'application/json; charset=UTF-8' } \r\n      })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setOptions([...response.data.cities,\"Other\"])\r\n        } else {\r\n          console.log(\"Server did not returned cities\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error getting cities\", err.message);\r\n      });\r\n    }\r\n    ,[]);\r\n  \r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options1: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.includes(\"Other\")){\r\n      props.actionProvider.handleCities(props.node,[\"Other\"]);\r\n    }else{\r\n      props.actionProvider.handleCities(props.node,selectedOptions);\r\n    }\r\n  };\r\n  //We used chatGpt to divide the cities into 3 columns\r\n  const columnSize = Math.ceil(options.length / 3);\r\n  const columns = [\r\n    options.slice(0, columnSize),\r\n    options.slice(columnSize, columnSize * 2),\r\n    options.slice(columnSize * 2),\r\n  ];\r\n\r\n  const renderCheckbox = (opt) => (\r\n    <div key={opt} className=\"cities\">\r\n      <label>\r\n      <input\r\n      className=\"checkbox\"\r\n      type=\"checkbox\"\r\n      value={opt}\r\n      onChange={handleOptionChange}\r\n      disabled={(opt!==\"Other\")&&selectedOptions.includes(\"Other\")} />\r\n      {opt}\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  const renderColumns = (columnCities,index) => (\r\n    <div key={index}>\r\n      {columnCities.map(city => renderCheckbox(city))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        <div style={{ display: 'flex' }}>\r\n        {\r\n          columns.map((columnCities,index) => renderColumns(columnCities,index))\r\n        }\r\n        </div>\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n\r\n};\r\n\r\nexport default EmailDisplay;\r\n\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Email.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobTitleTyping.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/JobCard.jsx",["283"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ClientHistory.jsx",["284","285"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/UserDetails.jsx",["286"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/MyCustomChatMessage.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/ConversationsPage.jsx",["287","288"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/OfferedJobs.jsx",["289","290","291","292","293"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/Statistics.jsx",["294"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/UserProvider.js",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/ProtectedRoutes.jsx",["295"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/Header.jsx",["296","297","298","299"],[],"import Button from '@mui/material/Button';\r\nimport JobotLogoPNG from \"./JOBOT.png\";\r\n\r\n//$$$$$$$$$$$$\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { Link } from 'react-router-dom';\r\nimport SmartToyOutlinedIcon from '@mui/icons-material/SmartToyOutlined';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\n\r\n\r\n//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\nexport default function Header({userType}) {\r\n  // const headerKind = \"admin\" // useContext()\r\n  return (\r\n    <div className=\"d-flex justify-content-between align-items-center px-5\" style={{backgroundColor:\"#59698b\",height:\"8vh\"}}>\r\n      <div>\r\n        <img src={JobotLogoPNG} style={{width:\"45%\"}}/>\r\n      </div>\r\n      <div>\r\n       <ListItem>\r\n            <IconButton component={Link} to=\"/about\">\r\n              <ListItemIcon>\r\n                <InfoIcon color=\"primary\" fontSize=\"large\"/>\r\n              </ListItemIcon>\r\n            </IconButton>\r\n            <ListItemText\r\n              primary={false}\r\n              secondary={false}\r\n            />\r\n        </ListItem>\r\n      </div>\r\n\r\n\r\n        {/* {userType[\"type\"] === \"admin\" ? \r\n        <div className=\"d-flex justify-content-right\">\r\n          <Button style={{color:\"#F1F6F9\"}}>ADMIN</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>ADMIN</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>ADMIN</Button>\r\n        </div>\r\n        : null}\r\n        {userType[\"type\"] === \"client\" ? \r\n        <div className=\"d-flex justify-content-right\">\r\n          <Button style={{color:\"#F1F6F9\"}}>USER</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>USER</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>USER</Button>\r\n        </div>\r\n        : null}\r\n         {userType[\"type\"] === null ? \r\n        <div className=\"d-flex justify-content-right\">\r\n          <Button style={{color:\"#F1F6F9\"}}>not logged in</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>not logged in</Button>\r\n          <Button style={{color:\"#F1F6F9\"}}>not logged in</Button>\r\n        </div>\r\n        : null} */}\r\n    </div>\r\n  );\r\n}\r\n","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/clientArea/About.jsx",["300"],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CardsTable.jsx",["301","302"],[],"import {useState} from 'react'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Pagination, Box} from \"@mui/material\"\r\nimport { CollapsableCard } from './CollapsableCard'\r\n\r\n\r\nexport const CardsTable = ({data}) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10;\r\n    const totalItems = data.length;\r\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n    const handlePageChange = (e, page) => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const generateTableData = (data) => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        const currentPageData = data.slice(startIndex, endIndex)\r\n        //let tableData = []\r\n\r\n        // for (let i = 0; i < currentPageData.length; i++) {\r\n        //     let job = currentPageData[i]\r\n        //     tableData.push(\r\n        //         <TableRow key={i}>\r\n        //             <TableCell>\r\n        //                 <CollapsableCard\r\n        //                     content={job.content.job}\r\n        //                     collapsableContent={job.collapsableContent.rating}\r\n        //                 />\r\n        //             </TableCell>\r\n        //         </TableRow>\r\n        //     )\r\n        // }\r\n        \r\n\r\n        return currentPageData\r\n    }\r\n\r\n    const tableData = generateTableData(data);\r\n\r\n    return (\r\n        <div className=\"w-50 d-flex flex-column mx-auto align-items-center justify-cotnent-center\">\r\n            <TableContainer>\r\n                <Table >\r\n                    <TableBody>\r\n                        {tableData.map((job, index)  => {\r\n                             return (\r\n                             <TableRow key={index}>\r\n                                <TableCell>\r\n                                    <CollapsableCard\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            flexDirection: 'column',\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"Center\",\r\n                                            // margin: \"0 2rem\",\r\n                                            width: \"100%\"\r\n                                        }}\r\n                                        content={job.content}\r\n                                        collapsableContent={job.collapsableContent}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            )\r\n                         })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Pagination\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={handlePageChange}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CollapsableCard.jsx",[],[],"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/ErrorMessages.jsx",[],[],{"ruleId":"303","severity":1,"message":"304","line":8,"column":10,"nodeType":"305","messageId":"306","endLine":8,"endColumn":17},{"ruleId":"303","severity":1,"message":"307","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":21},{"ruleId":"303","severity":1,"message":"308","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":19},{"ruleId":"309","severity":1,"message":"310","line":37,"column":6,"nodeType":"311","endLine":37,"endColumn":8,"suggestions":"312"},{"ruleId":"303","severity":1,"message":"313","line":10,"column":20,"nodeType":"305","messageId":"306","endLine":10,"endColumn":31},{"ruleId":"303","severity":1,"message":"314","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":28},{"ruleId":"303","severity":1,"message":"307","line":12,"column":10,"nodeType":"305","messageId":"306","endLine":12,"endColumn":21},{"ruleId":"303","severity":1,"message":"315","line":33,"column":13,"nodeType":"305","messageId":"306","endLine":33,"endColumn":22},{"ruleId":"303","severity":1,"message":"316","line":7,"column":9,"nodeType":"305","messageId":"306","endLine":7,"endColumn":24},{"ruleId":"303","severity":1,"message":"317","line":9,"column":10,"nodeType":"305","messageId":"306","endLine":9,"endColumn":14},{"ruleId":"318","severity":1,"message":"319","line":50,"column":17,"nodeType":"320","messageId":"321","endLine":50,"endColumn":18},{"ruleId":"303","severity":1,"message":"322","line":17,"column":11,"nodeType":"305","messageId":"306","endLine":17,"endColumn":19},{"ruleId":"303","severity":1,"message":"315","line":24,"column":13,"nodeType":"305","messageId":"306","endLine":24,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":189,"column":13,"nodeType":"305","messageId":"325","endLine":189,"endColumn":16},{"ruleId":"323","severity":1,"message":"324","line":206,"column":13,"nodeType":"305","messageId":"325","endLine":206,"endColumn":16},{"ruleId":"323","severity":1,"message":"326","line":318,"column":15,"nodeType":"305","messageId":"325","endLine":318,"endColumn":19},{"ruleId":"323","severity":1,"message":"324","line":406,"column":11,"nodeType":"305","messageId":"325","endLine":406,"endColumn":14},{"ruleId":"323","severity":1,"message":"326","line":739,"column":15,"nodeType":"305","messageId":"325","endLine":739,"endColumn":19},{"ruleId":"303","severity":1,"message":"327","line":19,"column":9,"nodeType":"305","messageId":"306","endLine":19,"endColumn":17},{"ruleId":"303","severity":1,"message":"328","line":210,"column":13,"nodeType":"305","messageId":"306","endLine":210,"endColumn":28},{"ruleId":"309","severity":1,"message":"329","line":11,"column":68,"nodeType":"311","endLine":11,"endColumn":70,"suggestions":"330"},{"ruleId":"309","severity":1,"message":"329","line":16,"column":6,"nodeType":"311","endLine":16,"endColumn":8,"suggestions":"331"},{"ruleId":"309","severity":1,"message":"329","line":11,"column":80,"nodeType":"311","endLine":11,"endColumn":82,"suggestions":"332"},{"ruleId":"309","severity":1,"message":"329","line":12,"column":68,"nodeType":"311","endLine":12,"endColumn":70,"suggestions":"333"},{"ruleId":"309","severity":1,"message":"329","line":17,"column":6,"nodeType":"311","endLine":17,"endColumn":8,"suggestions":"334"},{"ruleId":"309","severity":1,"message":"329","line":14,"column":78,"nodeType":"311","endLine":14,"endColumn":80,"suggestions":"335"},{"ruleId":"309","severity":1,"message":"329","line":70,"column":68,"nodeType":"311","endLine":70,"endColumn":70,"suggestions":"336"},{"ruleId":"309","severity":1,"message":"329","line":78,"column":68,"nodeType":"311","endLine":78,"endColumn":70,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":20,"column":20,"nodeType":"340","messageId":"341","endLine":20,"endColumn":22},{"ruleId":"309","severity":1,"message":"342","line":43,"column":5,"nodeType":"311","endLine":43,"endColumn":7,"suggestions":"343"},{"ruleId":"309","severity":1,"message":"329","line":11,"column":68,"nodeType":"311","endLine":11,"endColumn":70,"suggestions":"344"},{"ruleId":"303","severity":1,"message":"345","line":2,"column":9,"nodeType":"305","messageId":"306","endLine":2,"endColumn":17},{"ruleId":"303","severity":1,"message":"346","line":2,"column":18,"nodeType":"305","messageId":"306","endLine":2,"endColumn":27},{"ruleId":"309","severity":1,"message":"329","line":11,"column":68,"nodeType":"311","endLine":11,"endColumn":70,"suggestions":"347"},{"ruleId":"309","severity":1,"message":"342","line":32,"column":6,"nodeType":"311","endLine":32,"endColumn":8,"suggestions":"348"},{"ruleId":"318","severity":1,"message":"319","line":30,"column":23,"nodeType":"320","messageId":"321","endLine":30,"endColumn":24},{"ruleId":"303","severity":1,"message":"349","line":2,"column":23,"nodeType":"305","messageId":"306","endLine":2,"endColumn":34},{"ruleId":"303","severity":1,"message":"304","line":9,"column":10,"nodeType":"305","messageId":"306","endLine":9,"endColumn":17},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":21},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":21},{"ruleId":"309","severity":1,"message":"350","line":19,"column":6,"nodeType":"311","endLine":19,"endColumn":8,"suggestions":"351"},{"ruleId":"303","severity":1,"message":"307","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":10,"column":10,"nodeType":"305","messageId":"306","endLine":10,"endColumn":17},{"ruleId":"309","severity":1,"message":"352","line":29,"column":6,"nodeType":"311","endLine":29,"endColumn":8,"suggestions":"353"},{"ruleId":"354","severity":1,"message":"355","line":32,"column":18,"nodeType":"320","messageId":"356","endLine":32,"endColumn":20},{"ruleId":"318","severity":1,"message":"319","line":61,"column":17,"nodeType":"320","messageId":"321","endLine":61,"endColumn":18},{"ruleId":"309","severity":1,"message":"357","line":91,"column":7,"nodeType":"311","endLine":91,"endColumn":9,"suggestions":"358"},{"ruleId":"303","severity":1,"message":"359","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":18},{"ruleId":"303","severity":1,"message":"360","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":14},{"ruleId":"303","severity":1,"message":"361","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":12},{"ruleId":"303","severity":1,"message":"314","line":11,"column":8,"nodeType":"305","messageId":"306","endLine":11,"endColumn":28},{"ruleId":"362","severity":1,"message":"363","line":22,"column":9,"nodeType":"364","endLine":22,"endColumn":56},{"ruleId":"362","severity":1,"message":"363","line":42,"column":9,"nodeType":"364","endLine":42,"endColumn":56},{"ruleId":"303","severity":1,"message":"365","line":2,"column":55,"nodeType":"305","messageId":"306","endLine":2,"endColumn":64},{"ruleId":"303","severity":1,"message":"366","line":2,"column":88,"nodeType":"305","messageId":"306","endLine":2,"endColumn":91},"no-unused-vars","'useUser' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'FetchText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clientDetails'. Either include it or remove the dependency array.","ArrayExpression",["367"],"'setMyObject' is assigned a value but never used.","'SmartToyOutlinedIcon' is defined but never used.","'secondary' is assigned a value but never used.","'CollapsableCard' is defined but never used.","'blue' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'location' is assigned a value but never used.","no-redeclare","'txt' is already defined.","redeclared","'txt2' is already defined.","'jobTypes' is assigned a value but never used.","'specificCompany' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.node'. Either include it or remove the dependency array. If 'setOptions' needs the current value of 'props.node', you can also switch to useReducer instead of useState and read 'props.node' in the reducer.",["368"],["369"],["370"],["371"],["372"],["373"],["374"],["375"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.node'. Either include it or remove the dependency array.",["376"],["377"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["378"],["379"],"'useNavigate' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchHistory'. Either include it or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'fetchjobs'. Either include it or remove the dependency array.",["381"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'fetchStatistics'. Either include it or remove the dependency array.",["382"],"'Navigate' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TableHead' is defined but never used.","'Box' is defined but never used.",{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"385","fix":"387"},{"desc":"385","fix":"388"},{"desc":"385","fix":"389"},{"desc":"385","fix":"390"},{"desc":"385","fix":"391"},{"desc":"385","fix":"392"},{"desc":"385","fix":"393"},{"desc":"385","fix":"394"},{"desc":"385","fix":"395"},{"desc":"385","fix":"396"},{"desc":"385","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},"Update the dependencies array to be: [clientDetails]",{"range":"404","text":"405"},"Update the dependencies array to be: [props.node]",{"range":"406","text":"407"},{"range":"408","text":"407"},{"range":"409","text":"407"},{"range":"410","text":"407"},{"range":"411","text":"407"},{"range":"412","text":"407"},{"range":"413","text":"407"},{"range":"414","text":"407"},{"range":"415","text":"407"},{"range":"416","text":"407"},{"range":"417","text":"407"},{"range":"418","text":"407"},"Update the dependencies array to be: [fetchHistory]",{"range":"419","text":"420"},"Update the dependencies array to be: [fetchjobs]",{"range":"421","text":"422"},"Update the dependencies array to be: [fetchStatistics]",{"range":"423","text":"424"},[1050,1052],"[clientDetails]",[362,364],"[props.node]",[466,468],[386,388],[359,361],[468,470],[466,468],[2152,2154],[2549,2551],[1336,1338],[366,368],[372,374],[912,914],[627,629],"[fetchHistory]",[818,820],"[fetchjobs]",[2555,2557],"[fetchStatistics]"]