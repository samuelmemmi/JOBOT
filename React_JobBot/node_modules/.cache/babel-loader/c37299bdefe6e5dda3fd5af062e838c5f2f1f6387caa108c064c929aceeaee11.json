{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/JobsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './JobsPage.css';\nimport starImage from './star.avif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobsPage() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [companySearchQuery, setCompanySearchQuery] = useState('');\n  const [jobTitleSearchQuery, setJobTitleSearchQuery] = useState('');\n  const [citySearchQuery, setCitySearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    axios.post('/viewjobs').then(response => {\n      if (response.data.success) {\n        setJobs(response.data.total_list);\n        setIsLoading(false);\n      } else {\n        console.log('Error fetching jobs:', response.data.message);\n      }\n    }).catch(error => {\n      console.log('Error fetching jobs:', error.message);\n    });\n  }, []);\n  const filteredJobs = jobs.filter(job => job.company.toLowerCase().includes(companySearchQuery.toLowerCase()) && job.job.toLowerCase().includes(jobTitleSearchQuery.toLowerCase()) && job.city.toLowerCase().includes(citySearchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"JOBOT Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search jobs by company name\",\n          value: companySearchQuery,\n          onChange: event => setCompanySearchQuery(event.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search jobs by title\",\n          value: jobTitleSearchQuery,\n          onChange: event => setJobTitleSearchQuery(event.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search jobs by city\",\n          value: citySearchQuery,\n          onChange: event => setCitySearchQuery(event.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"jobs-list\",\n        children: filteredJobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"job-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"company-name\",\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-title\",\n            children: job.job\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-location\",\n            children: job.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), job.rating && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"star\",\n                src: starImage,\n                alt: \"Star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 56\n            }, this), \" \", job.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-date\",\n            children: job.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-link\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: job.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: job.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-description\",\n            children: job.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsPage, \"92CX+vihV45iyp2s8ewid7r8Pyw=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","starImage","JobsPage","jobs","setJobs","companySearchQuery","setCompanySearchQuery","jobTitleSearchQuery","setJobTitleSearchQuery","citySearchQuery","setCitySearchQuery","isLoading","setIsLoading","post","then","response","data","success","total_list","console","log","message","catch","error","filteredJobs","filter","job","company","toLowerCase","includes","city","event","target","value","map","index","rating","date","link","description"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/JobsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './JobsPage.css';\nimport starImage from './star.avif';\n\nfunction JobsPage() {\n  const [jobs, setJobs] = useState([]);\n  const [companySearchQuery, setCompanySearchQuery] = useState('');\n  const [jobTitleSearchQuery, setJobTitleSearchQuery] = useState('');\n  const [citySearchQuery, setCitySearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n    setIsLoading(true)\n    axios.post('/viewjobs')\n      .then(response => {\n        if (response.data.success) {\n          setJobs(response.data.total_list);\n          setIsLoading(false);\n        } else {\n          console.log('Error fetching jobs:', response.data.message);\n        }\n      })\n      .catch(error => {\n        console.log('Error fetching jobs:', error.message);\n      });\n  }, []);\n\n  const filteredJobs = jobs.filter(job =>\n    job.company.toLowerCase().includes(companySearchQuery.toLowerCase()) &&\n    job.job.toLowerCase().includes(jobTitleSearchQuery.toLowerCase()) &&\n    job.city.toLowerCase().includes(citySearchQuery.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h1 className=\"title\">JOBOT Jobs</h1>\n      {isLoading ? (\n        <p className=\"loading\">Loading...</p>\n      ) : (\n        <div className=\"jobs-page\">\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Search jobs by company name\"\n              value={companySearchQuery}\n              onChange={event => setCompanySearchQuery(event.target.value)}\n              className=\"search-input\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Search jobs by title\"\n              value={jobTitleSearchQuery}\n              onChange={event => setJobTitleSearchQuery(event.target.value)}\n              className=\"search-input\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Search jobs by city\"\n              value={citySearchQuery}\n              onChange={event => setCitySearchQuery(event.target.value)}\n              className=\"search-input\"\n            />\n          </div>\n          <ul className=\"jobs-list\">\n            {filteredJobs.map((job, index) => (\n              <li key={index} className=\"job-item\">\n                <h2 className=\"company-name\">{job.company}</h2>\n                <p className=\"job-title\">{job.job}</p>\n                <p className=\"job-location\">{job.city}</p>\n                {job.rating&&<p className=\"job-rating\"><span><img className=\"star\" src={starImage} alt=\"Star\" /></span> {job.rating}</p>}\n                <p className=\"job-date\">{job.date}</p>\n                <p className=\"job-link\">\n                  <a href={job.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {job.link}\n                  </a>\n                </p>\n                <p className=\"job-description\">{job.description}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n\n  );\n}\n\nexport default JobsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACS,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAGjDC,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,IAAI,CAAC;IAClBZ,KAAK,CAACa,IAAI,CAAC,WAAW,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;QACzBb,OAAO,CAACW,QAAQ,CAACC,IAAI,CAACE,UAAU,CAAC;QACjCN,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM;QACLO,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEL,QAAQ,CAACC,IAAI,CAACK,OAAO,CAAC;MAC5D;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,KAAK,CAACF,OAAO,CAAC;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGrB,IAAI,CAACsB,MAAM,CAACC,GAAG,IAClCA,GAAG,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACxB,kBAAkB,CAACuB,WAAW,EAAE,CAAC,IACpEF,GAAG,CAACA,GAAG,CAACE,WAAW,EAAE,CAACC,QAAQ,CAACtB,mBAAmB,CAACqB,WAAW,EAAE,CAAC,IACjEF,GAAG,CAACI,IAAI,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACpB,eAAe,CAACmB,WAAW,EAAE,CAAC,CAC/D;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,OAAO;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,EACpCjB,SAAS,gBACR;MAAG,SAAS,EAAC,SAAS;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI,gBAErC;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,SAAS,EAAC,kBAAkB;QAAA,wBAC/B;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,6BAA6B;UACzC,KAAK,EAAEN,kBAAmB;UAC1B,QAAQ,EAAE0B,KAAK,IAAIzB,qBAAqB,CAACyB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;UAC7D,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QACxB,eACF;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,sBAAsB;UAClC,KAAK,EAAE1B,mBAAoB;UAC3B,QAAQ,EAAEwB,KAAK,IAAIvB,sBAAsB,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;UAC9D,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QACxB,eACF;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,qBAAqB;UACjC,KAAK,EAAExB,eAAgB;UACvB,QAAQ,EAAEsB,KAAK,IAAIrB,kBAAkB,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;UAC1D,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QACxB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAI,SAAS,EAAC,WAAW;QAAA,UACtBT,YAAY,CAACU,GAAG,CAAC,CAACR,GAAG,EAAES,KAAK,kBAC3B;UAAgB,SAAS,EAAC,UAAU;UAAA,wBAClC;YAAI,SAAS,EAAC,cAAc;YAAA,UAAET,GAAG,CAACC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAM,eAC/C;YAAG,SAAS,EAAC,WAAW;YAAA,UAAED,GAAG,CAACA;UAAG;YAAA;YAAA;YAAA;UAAA,QAAK,eACtC;YAAG,SAAS,EAAC,cAAc;YAAA,UAAEA,GAAG,CAACI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,EACzCJ,GAAG,CAACU,MAAM,iBAAE;YAAG,SAAS,EAAC,YAAY;YAAA,wBAAC;cAAA,uBAAM;gBAAK,SAAS,EAAC,MAAM;gBAAC,GAAG,EAAEnC,SAAU;gBAAC,GAAG,EAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAAO,KAAC,EAACyB,GAAG,CAACU,MAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eACxH;YAAG,SAAS,EAAC,UAAU;YAAA,UAAEV,GAAG,CAACW;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACtC;YAAG,SAAS,EAAC,UAAU;YAAA,uBACrB;cAAG,IAAI,EAAEX,GAAG,CAACY,IAAK;cAAC,MAAM,EAAC,QAAQ;cAAC,GAAG,EAAC,qBAAqB;cAAA,UACzDZ,GAAG,CAACY;YAAI;cAAA;cAAA;cAAA;YAAA;UACP;YAAA;YAAA;YAAA;UAAA,QACF,eACJ;YAAG,SAAS,EAAC,iBAAiB;YAAA,UAAEZ,GAAG,CAACa;UAAW;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA,GAX7CJ,KAAK;UAAA;UAAA;UAAA;QAAA,QAaf;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QAER;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAGV;AAAC,GAlFQjC,QAAQ;AAAA,KAARA,QAAQ;AAoFjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}