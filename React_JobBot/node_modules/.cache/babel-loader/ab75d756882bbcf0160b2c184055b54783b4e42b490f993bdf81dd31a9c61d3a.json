{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Options.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = props => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  useEffect(() => {\n    var m = props.actionProvider.createChatBotMessage(\"hello\");\n    props.actionProvider.addMessageToState(m);\n    console.log(\"hwll\");\n    setOptions(props.node.getJobs());\n  }, []); //maybe props.node_if_options>0\n\n  const handleOptionChange = event => {\n    const option = event.target.value;\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter(selectedOption => selectedOption !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Selected Options: \", selectedOptions);\n    // handle submission logic\n    props.actionProvider.greet();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Jobs, \"e4MCsSeCfcM3pZfvXwXfIiGjEmY=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","Jobs","props","options","setOptions","selectedOptions","setSelectedOptions","m","actionProvider","createChatBotMessage","addMessageToState","console","log","node","getJobs","handleOptionChange","event","option","target","value","includes","filter","selectedOption","handleSubmit","preventDefault","greet"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Jobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  useEffect(\r\n    ()=>{\r\n        var m=props.actionProvider.createChatBotMessage(\"hello\");\r\n        props.actionProvider.addMessageToState(m);\r\n        console.log(\"hwll\")\r\n        setOptions(props.node.getJobs())\r\n    }\r\n    ,[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options: \", selectedOptions);\r\n    // handle submission logic\r\n    props.actionProvider.greet();\r\n    \r\n  };\r\n\r\n  return (\r\n    <></>\r\n\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAExC,OAAO,eAAe;AAAC;AAAA;AAEvB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CACP,MAAI;IACA,IAAIO,CAAC,GAACL,KAAK,CAACM,cAAc,CAACC,oBAAoB,CAAC,OAAO,CAAC;IACxDP,KAAK,CAACM,cAAc,CAACE,iBAAiB,CAACH,CAAC,CAAC;IACzCI,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBR,UAAU,CAACF,KAAK,CAACW,IAAI,CAACC,OAAO,EAAE,CAAC;EACpC,CAAC,EACA,EAAE,CAAC,CAAC;;EAEP,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACjC,IAAId,eAAe,CAACe,QAAQ,CAACH,MAAM,CAAC,EAAE;MACpCX,kBAAkB,CAACD,eAAe,CAACgB,MAAM,CAAEC,cAAc,IAAKA,cAAc,KAAKL,MAAM,CAAC,CAAC;IAC3F,CAAC,MAAM;MACLX,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEY,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMM,YAAY,GAAIP,KAAK,IAAK;IAC9BA,KAAK,CAACQ,cAAc,EAAE;IACtBb,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEP,eAAe,CAAC;IAClD;IACAH,KAAK,CAACM,cAAc,CAACiB,KAAK,EAAE;EAE9B,CAAC;EAED,oBACE,qCAAK;AAGT,CAAC;AAAC,GAlCIxB,IAAI;AAAA,KAAJA,IAAI;AAoCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}