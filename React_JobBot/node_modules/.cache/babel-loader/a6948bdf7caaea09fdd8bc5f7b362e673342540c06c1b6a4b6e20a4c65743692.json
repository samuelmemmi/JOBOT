{"ast":null,"code":"import chatFlow from \"./convert_tree_to_json\";\nimport axios from \"axios\";\nexport class FetchText {\n  constructor() {\n    this.registrationDetails = {};\n    this.head = {};\n    this.selected = {};\n    this.historyChat = [];\n    this.jobs = [];\n    this.selectedJobs = [];\n    this.countNotFits = 0;\n    this.isFeedback = 0;\n    this.accuracyNode = {};\n    this.accuracyOptions = [];\n    this.isJobAccuracy = 0;\n    this.isRequirements = 0;\n    this.savedInDB = {};\n    ///////חייב לשמור את פרטי המשרות שהלקוח סך הכל בחר בDB\n  }\n\n  intialHead() {\n    try {\n      this.head = require(\"./decisionTree.json\");\n    } catch (error) {\n      this.head = chatFlow;\n      axios.post(\"/write-json\", this.head, {\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => {\n        console.log(response.data.message);\n      }).catch(error => {\n        console.error(error.response.data.error);\n      });\n    }\n  }\n  setNextResponse(node) {\n    this.head = node;\n  }\n  getNextResponse() {\n    return this.head;\n  }\n  setSelected(selected) {\n    this.selected = selected;\n  }\n  getSelected() {\n    return this.selected;\n  }\n  setHistoryChat(historyChat) {\n    this.historyChat = historyChat;\n  }\n  getHistoryChat() {\n    return this.historyChat;\n  }\n  setJobs(jobs) {\n    this.jobs = jobs;\n  }\n  getJobs() {\n    return this.jobs;\n  }\n  setSelectedJobs(selectedJobs) {\n    this.selectedJobs = selectedJobs;\n  }\n  getSelectedJobs() {\n    return this.selectedJobs;\n  }\n  incCountNotFits(countNotFits) {\n    this.countNotFits = countNotFits + 1;\n  }\n  getCountNotFits() {\n    return this.countNotFits;\n  }\n  setIsFeedback(val) {\n    this.isFeedback = val;\n  }\n  getIsFeedback() {\n    return this.isFeedback;\n  }\n  setAccuracyNode(accuracyNode) {\n    this.accuracyNode = accuracyNode;\n  }\n  getAccuracyNode() {\n    return this.accuracyNode;\n  }\n  setAccuracyOptions(accuracyOptions) {\n    this.accuracyOptions = accuracyOptions;\n  }\n  getAccuracyOptions() {\n    return this.accuracyOptions;\n  }\n  setIsJobAccuracy(isJobAccuracy) {\n    this.isJobAccuracy = isJobAccuracy;\n  }\n  getIsJobAccuracy() {\n    return this.isJobAccuracy;\n  }\n  setIsRequirements(isRequirements) {\n    this.isRequirements = isRequirements;\n  }\n  getIsRequirements() {\n    return this.isRequirements;\n  }\n  setRegistrationDetails(registrationDetails) {\n    this.registrationDetails = registrationDetails;\n  }\n  getRegistrationDetails() {\n    return this.registrationDetails;\n  }\n  setSavedInDB(savedInDB) {\n    this.savedInDB = savedInDB;\n  }\n  getSavedInDB() {\n    return this.savedInDB;\n  }\n}\nvar dec_tree = new FetchText();\ndec_tree.intialHead();\nexport default dec_tree;","map":{"version":3,"names":["chatFlow","axios","FetchText","constructor","registrationDetails","head","selected","historyChat","jobs","selectedJobs","countNotFits","isFeedback","accuracyNode","accuracyOptions","isJobAccuracy","isRequirements","savedInDB","intialHead","require","error","post","headers","then","response","console","log","data","message","catch","setNextResponse","node","getNextResponse","setSelected","getSelected","setHistoryChat","getHistoryChat","setJobs","getJobs","setSelectedJobs","getSelectedJobs","incCountNotFits","getCountNotFits","setIsFeedback","val","getIsFeedback","setAccuracyNode","getAccuracyNode","setAccuracyOptions","getAccuracyOptions","setIsJobAccuracy","getIsJobAccuracy","setIsRequirements","getIsRequirements","setRegistrationDetails","getRegistrationDetails","setSavedInDB","getSavedInDB","dec_tree"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/getFlowText.js"],"sourcesContent":["import chatFlow from \"./convert_tree_to_json\";\r\nimport axios from \"axios\";\r\n\r\nexport class FetchText {\r\n  constructor() {\r\n    this.registrationDetails = {};\r\n    this.head = {};\r\n    this.selected = {};\r\n    this.historyChat = [];\r\n    this.jobs = [];\r\n    this.selectedJobs = [];\r\n    this.countNotFits = 0;\r\n    this.isFeedback = 0;\r\n    this.accuracyNode = {};\r\n    this.accuracyOptions = [];\r\n    this.isJobAccuracy = 0;\r\n    this.isRequirements = 0;\r\n    this.savedInDB = {};\r\n    ///////חייב לשמור את פרטי המשרות שהלקוח סך הכל בחר בDB\r\n  }\r\n\r\n  intialHead() {\r\n    try {\r\n      this.head = require(\"./decisionTree.json\");\r\n    } catch (error) {\r\n      this.head = chatFlow;\r\n      axios\r\n        .post(\"/write-json\", this.head, {\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data.message);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.response.data.error);\r\n        });\r\n    }\r\n  }\r\n\r\n  setNextResponse(node) {\r\n    this.head = node;\r\n  }\r\n\r\n  getNextResponse() {\r\n    return this.head;\r\n  }\r\n\r\n  setSelected(selected) {\r\n    this.selected = selected;\r\n  }\r\n\r\n  getSelected() {\r\n    return this.selected;\r\n  }\r\n\r\n  setHistoryChat(historyChat) {\r\n    this.historyChat = historyChat;\r\n  }\r\n\r\n  getHistoryChat() {\r\n    return this.historyChat;\r\n  }\r\n  setJobs(jobs) {\r\n    this.jobs = jobs;\r\n  }\r\n\r\n  getJobs() {\r\n    return this.jobs;\r\n  }\r\n  setSelectedJobs(selectedJobs) {\r\n    this.selectedJobs = selectedJobs;\r\n  }\r\n\r\n  getSelectedJobs() {\r\n    return this.selectedJobs;\r\n  }\r\n\r\n  incCountNotFits(countNotFits) {\r\n    this.countNotFits = countNotFits + 1;\r\n  }\r\n\r\n  getCountNotFits() {\r\n    return this.countNotFits;\r\n  }\r\n\r\n  setIsFeedback(val) {\r\n    this.isFeedback = val;\r\n  }\r\n\r\n  getIsFeedback() {\r\n    return this.isFeedback;\r\n  }\r\n  setAccuracyNode(accuracyNode) {\r\n    this.accuracyNode = accuracyNode;\r\n  }\r\n\r\n  getAccuracyNode() {\r\n    return this.accuracyNode;\r\n  }\r\n  setAccuracyOptions(accuracyOptions) {\r\n    this.accuracyOptions = accuracyOptions;\r\n  }\r\n\r\n  getAccuracyOptions() {\r\n    return this.accuracyOptions;\r\n  }\r\n  setIsJobAccuracy(isJobAccuracy) {\r\n    this.isJobAccuracy = isJobAccuracy;\r\n  }\r\n\r\n  getIsJobAccuracy() {\r\n    return this.isJobAccuracy;\r\n  }\r\n  setIsRequirements(isRequirements) {\r\n    this.isRequirements = isRequirements;\r\n  }\r\n\r\n  getIsRequirements() {\r\n    return this.isRequirements;\r\n  }\r\n\r\n  setRegistrationDetails(registrationDetails) {\r\n    this.registrationDetails = registrationDetails;\r\n  }\r\n  getRegistrationDetails() {\r\n    return this.registrationDetails;\r\n  }\r\n  setSavedInDB(savedInDB) {\r\n    this.savedInDB = savedInDB;\r\n  }\r\n  getSavedInDB() {\r\n    return this.savedInDB;\r\n  }\r\n}\r\n\r\nvar dec_tree = new FetchText();\r\ndec_tree.intialHead();\r\n\r\nexport default dec_tree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}