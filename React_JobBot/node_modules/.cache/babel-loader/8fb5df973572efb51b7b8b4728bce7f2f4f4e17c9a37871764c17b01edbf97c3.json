{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport JobCard from \"./JobCard.jsx\";\nimport \"./Options.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = props => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [selectedJobId, setSelectedJobId] = useState(null);\n  const [submitted, setSubmitted] = useState(true);\n  useEffect(() => {\n    setOptions([...props.node.getJobs(), {\n      id: \"Nothing fits\"\n    }]);\n  }, []);\n  const handleOptionChange = event => {\n    const option = event.target.value;\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter(selectedOption => selectedOption !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  const isFormValid = () => {\n    return Object.values(selectedOptions).some(isChecked => isChecked) && submitted;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Selected Options1: \", selectedOptions);\n    // handle submission logic\n    setSubmitted(false);\n    if (selectedOptions.includes(\"Nothing fits\")) {\n      props.node.incCountNotFits(props.node.getCountNotFits());\n      console.log(\"count \", props.node.getCountNotFits());\n      props.actionProvider.handleJob(props.node, [\"Nothing fits\"]);\n    } else if (selectedOptions.length <= 2 && props.node.getCountNotFits() === 0) {\n      props.node.incCountNotFits(props.node.getCountNotFits());\n      //update selected jobs in state\n      if (props.node.getSavedInDB()[\"selected jobs\"]) {\n        props.node.setSavedInDB({\n          ...props.node.getSavedInDB(),\n          \"selected jobs\": props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)\n        });\n      } else {\n        props.node.setSavedInDB({\n          ...props.node.getSavedInDB(),\n          \"selected jobs\": selectedOptions\n        });\n      }\n      //\n      props.node.setSelectedJobs(selectedOptions);\n      console.log(\"selected jobs \", props.node.getSelectedJobs());\n      props.actionProvider.handleJob(props.node, [\"Nothing fits\"]);\n    } else {\n      //update selected jobs in state\n      if (props.node.getSavedInDB()[\"selected jobs\"]) {\n        props.node.setSavedInDB({\n          ...props.node.getSavedInDB(),\n          \"selected jobs\": props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)\n        });\n      } else {\n        props.node.setSavedInDB({\n          ...props.node.getSavedInDB(),\n          \"selected jobs\": selectedOptions\n        });\n      }\n      //\n      props.node.setSelectedJobs(selectedOptions);\n      props.actionProvider.handleJob(props.node, selectedOptions);\n    }\n  };\n  const onCardClick = id => {\n    setSelectedJobId(selectedJobId === id ? null : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [options.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\",\n        value: job.id,\n        onChange: handleOptionChange,\n        disabled: job.id !== \"Nothing fits\" && selectedOptions.includes(\"Nothing fits\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(JobCard\n      // key={job.id}\n      , {\n        job: job,\n        isSelected: job.id === selectedJobId,\n        onCardClick: onCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"option-button\",\n      disabled: !isFormValid(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 4\n  }, this);\n};\n_s(Jobs, \"o0YZsjCnHo871+o8E4yafqOkHNw=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","Jobs","props","options","setOptions","selectedOptions","setSelectedOptions","selectedJobId","setSelectedJobId","submitted","setSubmitted","node","getJobs","id","handleOptionChange","event","option","target","value","includes","filter","selectedOption","isFormValid","Object","values","some","isChecked","handleSubmit","preventDefault","console","log","incCountNotFits","getCountNotFits","actionProvider","handleJob","length","getSavedInDB","setSavedInDB","concat","setSelectedJobs","getSelectedJobs","onCardClick","map","job","index"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport JobCard from \"./JobCard.jsx\"\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Jobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [selectedJobId, setSelectedJobId] = useState(null);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n  useEffect(()=>{setOptions([...props.node.getJobs(),{id:\"Nothing fits\"}])},[]);\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options1: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    if(selectedOptions.includes(\"Nothing fits\")){\r\n      props.node.incCountNotFits(props.node.getCountNotFits());\r\n      console.log(\"count \",props.node.getCountNotFits())\r\n      props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\r\n    }else if((selectedOptions.length<=2)&&props.node.getCountNotFits()===0){\r\n      props.node.incCountNotFits(props.node.getCountNotFits());\r\n      //update selected jobs in state\r\n      if(props.node.getSavedInDB()[\"selected jobs\"]){\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)});\r\n      }else{\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":selectedOptions});\r\n      }\r\n      //\r\n      props.node.setSelectedJobs(selectedOptions)\r\n      console.log(\"selected jobs \",props.node.getSelectedJobs())\r\n      props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\r\n    }else{\r\n      //update selected jobs in state\r\n      if(props.node.getSavedInDB()[\"selected jobs\"]){\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":props.node.getSavedInDB()[\"selected jobs\"].concat(selectedOptions)});\r\n      }else{\r\n        props.node.setSavedInDB({...props.node.getSavedInDB(),\"selected jobs\":selectedOptions});\r\n      }\r\n      //\r\n      props.node.setSelectedJobs(selectedOptions)\r\n      props.actionProvider.handleJob(props.node,selectedOptions);\r\n    }\r\n  };\r\n\r\n  const onCardClick = (id) => {\r\n    setSelectedJobId(selectedJobId === id ? null : id);\r\n  };\r\n    \r\n  return(\r\n   <form onSubmit={handleSubmit}>\r\n    {options.map((job,index) => (\r\n      <div key={index}>\r\n          <input\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          value={job.id}\r\n          onChange={handleOptionChange}\r\n          disabled={(job.id!==\"Nothing fits\")&&selectedOptions.includes(\"Nothing fits\")}\r\n          />\r\n          {/* {job.id} */}\r\n\r\n          <JobCard\r\n          // key={job.id}\r\n          job={job}\r\n          isSelected={job.id === selectedJobId}\r\n          onCardClick={onCardClick}\r\n          />\r\n      </div>\r\n      ))\r\n    }\r\n    <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n   </form>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}