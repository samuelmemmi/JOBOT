{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\source\\\\repos\\\\JOBOT\\\\JOBOT\\\\React_JobBot\\\\src\\\\pages\\\\adminArea\\\\viewChatFlow.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// import chatFlow from '../chatBotLogic/convert_tree_to_json.js';\n\n// const TreeNode = ({ node }) => {\n//   const [isExpanded, setExpanded] = useState(false);\n//   return (\n//     <ul>\n//       <li>\n//         {node.title+\": \"}\n//         {node.text}\n//         {node.children && node.children.length > 0 && (\n//           <button onClick={() => setExpanded(!isExpanded)}>\n//             {isExpanded ? 'Collapse' : 'Expand'}\n//           </button>\n//         )}\n//       </li>\n//       {isExpanded &&\n//         node.children.map((childNode, index) => (\n//           <TreeNode key={index} node={childNode} />\n//         ))}\n//     </ul>\n//   );\n// };\n\n// const Tree = ({ data }) => {\n//   return <TreeNode node={data} />;\n// };\n\n// const ViewChatFlow = () => {\n//   return (\n//     <div>\n//       <Tree data={chatFlow} />\n//     </div>\n//   );\n// };\n\n// export default ViewChatFlow;\n\nimport React, { useState } from 'react';\nimport './EditableList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditableList() {\n  _s();\n  const [items, setItems] = useState([{\n    id: 1,\n    text: 'Item 1'\n  }, {\n    id: 2,\n    text: 'Item 2'\n  }, {\n    id: 3,\n    text: 'Item 3'\n  }]);\n  const handleEdit = (id, text) => {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          text\n        };\n      } else {\n        return item;\n      }\n    }));\n  };\n\n  // const handleDelete = (id) => {\n  //   setItems(items.filter((item) => item.id !== id));\n  // };\n\n  // const handleAdd = () => {\n  //   const newItem = {\n  //     id: Math.max(...items.map((item) => item.id)) + 1,\n  //     text: '',\n  //   };\n  //   setItems([...items, newItem]);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editable-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editable List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: item.text,\n          onChange: e => handleEdit(item.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: handleAdd,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(EditableList, \"6O0gmw8XKttWtQEXD0rUuXIamuE=\");\n_c = EditableList;\nexport default EditableList;\nvar _c;\n$RefreshReg$(_c, \"EditableList\");","map":{"version":3,"names":["React","useState","EditableList","items","setItems","id","text","handleEdit","map","item","e","target","value","handleDelete","handleAdd"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// import chatFlow from '../chatBotLogic/convert_tree_to_json.js';\r\n\r\n// const TreeNode = ({ node }) => {\r\n//   const [isExpanded, setExpanded] = useState(false);\r\n//   return (\r\n//     <ul>\r\n//       <li>\r\n//         {node.title+\": \"}\r\n//         {node.text}\r\n//         {node.children && node.children.length > 0 && (\r\n//           <button onClick={() => setExpanded(!isExpanded)}>\r\n//             {isExpanded ? 'Collapse' : 'Expand'}\r\n//           </button>\r\n//         )}\r\n//       </li>\r\n//       {isExpanded &&\r\n//         node.children.map((childNode, index) => (\r\n//           <TreeNode key={index} node={childNode} />\r\n//         ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n\r\n// const Tree = ({ data }) => {\r\n//   return <TreeNode node={data} />;\r\n// };\r\n\r\n// const ViewChatFlow = () => {\r\n//   return (\r\n//     <div>\r\n//       <Tree data={chatFlow} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewChatFlow;\r\n\r\nimport React, { useState } from 'react';\r\nimport './EditableList.css';\r\n\r\nfunction EditableList() {\r\n  const [items, setItems] = useState([\r\n    { id: 1, text: 'Item 1' },\r\n    { id: 2, text: 'Item 2' },\r\n    { id: 3, text: 'Item 3' },\r\n  ]);\r\n\r\n  const handleEdit = (id, text) => {\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === id) {\r\n          return { ...item, text };\r\n        } else {\r\n          return item;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  // const handleDelete = (id) => {\r\n  //   setItems(items.filter((item) => item.id !== id));\r\n  // };\r\n\r\n  // const handleAdd = () => {\r\n  //   const newItem = {\r\n  //     id: Math.max(...items.map((item) => item.id)) + 1,\r\n  //     text: '',\r\n  //   };\r\n  //   setItems([...items, newItem]);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"editable-list\">\r\n      <h2>Editable List</h2>\r\n      <ul>\r\n        {items.map((item) => (\r\n          <li key={item.id}>\r\n            <input\r\n              type=\"text\"\r\n              value={item.text}\r\n              onChange={(e) => handleEdit(item.id, e.target.value)}\r\n            />\r\n            <button onClick={() => handleDelete(item.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button className=\"add-button\" onClick={handleAdd}>\r\n        Add Item\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default EditableList;\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC;AAE5B,SAASC,YAAY,GAAG;EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CACjC;IAAEI,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,CAC1B,CAAC;EAEF,MAAMC,UAAU,GAAG,CAACF,EAAE,EAAEC,IAAI,KAAK;IAC/BF,QAAQ,CACND,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAK;MAClB,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGI,IAAI;UAAEH;QAAK,CAAC;MAC1B,CAAC,MAAM;QACL,OAAOG,IAAI;MACb;IACF,CAAC,CAAC,CACH;EACH,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAA,UACGN,KAAK,CAACK,GAAG,CAAEC,IAAI,iBACd;QAAA,wBACE;UACE,IAAI,EAAC,MAAM;UACX,KAAK,EAAEA,IAAI,CAACH,IAAK;UACjB,QAAQ,EAAGI,CAAC,IAAKH,UAAU,CAACE,IAAI,CAACJ,EAAE,EAAEK,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACrD,eACF;UAAQ,OAAO,EAAE,MAAMC,YAAY,CAACJ,IAAI,CAACJ,EAAE,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GANtDI,IAAI,CAACJ,EAAE;QAAA;QAAA;QAAA;MAAA,QAQjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MAAQ,SAAS,EAAC,YAAY;MAAC,OAAO,EAAES,SAAU;MAAA,UAAC;IAEnD;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAGV;AAAC,GApDQZ,YAAY;AAAA,KAAZA,YAAY;AAsDrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}