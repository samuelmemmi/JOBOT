{"ast":null,"code":"// import chatFlow from '../chatBotLogic/convert_tree_to_json.js';\nimport \"./h.css\";\nimport './EditableList.css';\n\n// const EditableTree = ({ text, children, description }) => {\n//   const [editedText, setEditedText] = useState(text);\n//   const [isExpanded, setExpanded] = useState(false);\n//   const [isFinishEdit, setFinishEdit]= useState(false);\n\n//   const handleTextChange = (event) => {\n//     if(isFinishEdit){\n//       setEditedText(event.target.value);\n//     }\n//   };\n\n//   return (\n//     <ul>\n//       <li className='vertix'>\n\n//       <input className=\"age\" type=\"text\" value={description} />\n\n//       <input className=\"person\" type=\"text\" value={editedText} onChange={handleTextChange} />\n\n//       {/* <br/> */}\n\n//       <button className=\"add-button\" onClick={() => setFinishEdit(!isFinishEdit)}>\n//           {isFinishEdit ? 'Finish Edit' : 'Edit Formulation'}\n//       </button>\n\n//       {children && children.length > 0 && (\n//       <>\n//           <button className=\"add-button\" onClick={() => setExpanded(!isExpanded)}>\n//           {isExpanded ? 'Collapse' : 'Expand'}\n//           </button>\n//       </>\n//       )}\n\n//       </li>\n//       {isExpanded && children&&children.length > 0&&(children.map((child, index) => (\n//         <EditableTree\n//           key={index}\n//           text={child.text}\n//           children={child.children}\n//           description={child.title}\n//         />\n//       )))}\n//     </ul>\n//   );\n// };\n\n// const ViewChatFlow = () => {\n//   return (\n//     <div className=\"pedigree-tree\">\n//       <EditableTree text={chatFlow.text} children={chatFlow.children} description={chatFlow.title} />\n//       {chatFlow.text}\n//     </div>\n//   );\n// };\n\n// export default ViewChatFlow;","map":{"version":3,"names":[],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx"],"sourcesContent":["// import chatFlow from '../chatBotLogic/convert_tree_to_json.js';\r\nimport \"./h.css\"\r\nimport './EditableList.css';\r\n\r\n// const EditableTree = ({ text, children, description }) => {\r\n//   const [editedText, setEditedText] = useState(text);\r\n//   const [isExpanded, setExpanded] = useState(false);\r\n//   const [isFinishEdit, setFinishEdit]= useState(false);\r\n\r\n\r\n//   const handleTextChange = (event) => {\r\n//     if(isFinishEdit){\r\n//       setEditedText(event.target.value);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <ul>\r\n//       <li className='vertix'>\r\n\r\n//       <input className=\"age\" type=\"text\" value={description} />\r\n\r\n//       <input className=\"person\" type=\"text\" value={editedText} onChange={handleTextChange} />\r\n      \r\n//       {/* <br/> */}\r\n\r\n//       <button className=\"add-button\" onClick={() => setFinishEdit(!isFinishEdit)}>\r\n//           {isFinishEdit ? 'Finish Edit' : 'Edit Formulation'}\r\n//       </button>\r\n\r\n//       {children && children.length > 0 && (\r\n//       <>\r\n//           <button className=\"add-button\" onClick={() => setExpanded(!isExpanded)}>\r\n//           {isExpanded ? 'Collapse' : 'Expand'}\r\n//           </button>\r\n//       </>\r\n//       )}\r\n\r\n//       </li>\r\n//       {isExpanded && children&&children.length > 0&&(children.map((child, index) => (\r\n//         <EditableTree\r\n//           key={index}\r\n//           text={child.text}\r\n//           children={child.children}\r\n//           description={child.title}\r\n//         />\r\n//       )))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// const ViewChatFlow = () => {\r\n//   return (\r\n//     <div className=\"pedigree-tree\">\r\n//       <EditableTree text={chatFlow.text} children={chatFlow.children} description={chatFlow.title} />\r\n//       {chatFlow.text}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewChatFlow;"],"mappings":"AAAA;AACA,OAAO,SAAS;AAChB,OAAO,oBAAoB;;AAE3B;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}