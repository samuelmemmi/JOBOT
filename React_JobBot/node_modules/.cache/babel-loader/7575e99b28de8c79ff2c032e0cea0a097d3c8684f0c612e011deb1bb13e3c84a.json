{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\source\\\\repos\\\\JOBOT\\\\JOBOT\\\\React_JobBot\\\\src\\\\pages\\\\adminArea\\\\viewChatFlow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport chatFlow from '../chatBotLogic/convert_tree_to_json.js';\nimport './EditableList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TreeNode = _ref => {\n  _s();\n  let {\n    node\n  } = _ref;\n  const [isExpanded, setExpanded] = useState(false);\n  //   const [items, setItems] = useState(chatFlow)\n\n  // const handleEdit = (text) => {\n  //   setItems(\n  //     items.map((item) => {\n  //         return { ...item, text };\n  //     })\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"editable-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [node.title + \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"textContent\",\n        type: \"text\",\n        value: node.text,\n        onChange: e => node.text = e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => setExpanded(!isExpanded),\n          children: isExpanded ? 'Collapse' : 'Expand'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isExpanded && node.children.map((childNode, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: childNode\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"NnpZ02mnzhSI60Wh5Zhq+UM1KNk=\");\n_c = TreeNode;\nconst Tree = _ref2 => {\n  let {\n    data\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Editable Chat flow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), \";\"]\n  }, void 0, true);\n};\n_c2 = Tree;\nconst ViewChatFlow = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: chatFlow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ViewChatFlow;\nexport default ViewChatFlow;\n\n// import React, { useState } from 'react';\n// import './EditableList.css';\n\n// function EditableList() {\n//   const [items, setItems] = useState([\n//     { id: 1, text: 'Item 1' },\n//     { id: 2, text: 'Item 2' },\n//     { id: 3, text: 'Item 3' },\n//   ]);\n\n//   const handleEdit = (id, text) => {\n//     setItems(\n//       items.map((item) => {\n//         if (item.id === id) {\n//           return { ...item, text };\n//         } else {\n//           return item;\n//         }\n//       })\n//     );\n//   };\n\n//   const handleDelete = (id) => {\n//     setItems(items.filter((item) => item.id !== id));\n//   };\n\n//   const handleAdd = () => {\n//     const newItem = {\n//       id: Math.max(...items.map((item) => item.id)) + 1,\n//       text: '',\n//     };\n//     setItems([...items, newItem]);\n//   };\n\n//   return (\n//     <div className=\"editable-list\">\n//       <h2>Editable List</h2>\n//       <ul>\n//         {items.map((item) => (\n//           <li key={item.id}>\n//             <input\n//               type=\"text\"\n//               value={item.text}\n//               onChange={(e) => handleEdit(item.id, e.target.value)}\n//             />\n//             <button onClick={() => handleDelete(item.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <button className=\"add-button\" onClick={handleAdd}>\n//         Add Item\n//       </button>\n//     </div>\n//   );\n\n// }\n\n// export default EditableList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"Tree\");\n$RefreshReg$(_c3, \"ViewChatFlow\");","map":{"version":3,"names":["React","useState","chatFlow","TreeNode","node","isExpanded","setExpanded","title","text","e","target","value","children","length","map","childNode","index","Tree","data","ViewChatFlow"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport chatFlow from '../chatBotLogic/convert_tree_to_json.js';\r\nimport './EditableList.css';\r\n\r\n\r\nconst TreeNode = ({ node }) => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  //   const [items, setItems] = useState(chatFlow)\r\n\r\n  // const handleEdit = (text) => {\r\n  //   setItems(\r\n  //     items.map((item) => {\r\n  //         return { ...item, text };\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <ul className=\"editable-list\">\r\n      <li>\r\n        {node.title+\": \"}<br/>\r\n        {/* {node.text} */}\r\n        <input\r\n        className=\"textContent\"\r\n        type=\"text\"\r\n        value={node.text}\r\n        onChange={(e) => node.text=e.target.value}/>\r\n        <br/>\r\n        {node.children && node.children.length > 0 && (\r\n          <>\r\n              <button className=\"add-button\" onClick={() => setExpanded(!isExpanded)}>\r\n              {isExpanded ? 'Collapse' : 'Expand'}\r\n              </button>\r\n          </>\r\n        )}\r\n        {/* <button className=\"edit-button\">Edit</button> */}\r\n      </li>\r\n      {isExpanded &&\r\n        node.children.map((childNode, index) => (\r\n          <TreeNode key={index} node={childNode} />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nconst Tree = ({ data }) => {\r\n  return (\r\n  <>\r\n  <h2 className=\"title\">Editable Chat flow</h2>\r\n  <TreeNode node={data} />;\r\n  </>\r\n  )\r\n};\r\n\r\nconst ViewChatFlow = () => {\r\n  return (\r\n    <div>\r\n      <Tree data={chatFlow} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewChatFlow;\r\n\r\n// import React, { useState } from 'react';\r\n// import './EditableList.css';\r\n\r\n// function EditableList() {\r\n//   const [items, setItems] = useState([\r\n//     { id: 1, text: 'Item 1' },\r\n//     { id: 2, text: 'Item 2' },\r\n//     { id: 3, text: 'Item 3' },\r\n//   ]);\r\n\r\n//   const handleEdit = (id, text) => {\r\n//     setItems(\r\n//       items.map((item) => {\r\n//         if (item.id === id) {\r\n//           return { ...item, text };\r\n//         } else {\r\n//           return item;\r\n//         }\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   const handleDelete = (id) => {\r\n//     setItems(items.filter((item) => item.id !== id));\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     const newItem = {\r\n//       id: Math.max(...items.map((item) => item.id)) + 1,\r\n//       text: '',\r\n//     };\r\n//     setItems([...items, newItem]);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"editable-list\">\r\n//       <h2>Editable List</h2>\r\n//       <ul>\r\n//         {items.map((item) => (\r\n//           <li key={item.id}>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={item.text}\r\n//               onChange={(e) => handleEdit(item.id, e.target.value)}\r\n//             />\r\n//             <button onClick={() => handleDelete(item.id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <button className=\"add-button\" onClick={handleAdd}>\r\n//         Add Item\r\n//       </button>\r\n//     </div>\r\n//   );\r\n\r\n// }\r\n\r\n// export default EditableList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,QAAQ,MAAM,yCAAyC;AAC9D,OAAO,oBAAoB;AAAC;AAAA;AAG5B,MAAMC,QAAQ,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACxB,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAI,SAAS,EAAC,eAAe;IAAA,wBAC3B;MAAA,WACGG,IAAI,CAACG,KAAK,GAAC,IAAI,eAAC;QAAA;QAAA;QAAA;MAAA,QAAK,eAEtB;QACA,SAAS,EAAC,aAAa;QACvB,IAAI,EAAC,MAAM;QACX,KAAK,EAAEH,IAAI,CAACI,IAAK;QACjB,QAAQ,EAAGC,CAAC,IAAKL,IAAI,CAACI,IAAI,GAACC,CAAC,CAACC,MAAM,CAACC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5C;QAAA;QAAA;QAAA;MAAA,QAAK,EACJP,IAAI,CAACQ,QAAQ,IAAIR,IAAI,CAACQ,QAAQ,CAACC,MAAM,GAAG,CAAC,iBACxC;QAAA,uBACI;UAAQ,SAAS,EAAC,YAAY;UAAC,OAAO,EAAE,MAAMP,WAAW,CAAC,CAACD,UAAU,CAAE;UAAA,UACtEA,UAAU,GAAG,UAAU,GAAG;QAAQ;UAAA;UAAA;UAAA;QAAA;MAC1B,iBAEd;IAAA;MAAA;MAAA;MAAA;IAAA,QAEE,EACJA,UAAU,IACTD,IAAI,CAACQ,QAAQ,CAACE,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACjC,QAAC,QAAQ;MAAa,IAAI,EAAED;IAAU,GAAvBC,KAAK;MAAA;MAAA;MAAA;IAAA,QACrB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAET,CAAC;AAAC,GAtCIb,QAAQ;AAAA,KAARA,QAAQ;AAyCd,MAAMc,IAAI,GAAG,SAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACpB,oBACA;IAAA,wBACA;MAAI,SAAS,EAAC,OAAO;MAAA,UAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7C,QAAC,QAAQ;MAAC,IAAI,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,KACxB;EAAA,gBAAG;AAEL,CAAC;AAAC,MAPID,IAAI;AASV,MAAME,YAAY,GAAG,MAAM;EACzB,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,IAAI,EAAEjB;IAAS;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV,CAAC;AAAC,MANIiB,YAAY;AAQlB,eAAeA,YAAY;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}