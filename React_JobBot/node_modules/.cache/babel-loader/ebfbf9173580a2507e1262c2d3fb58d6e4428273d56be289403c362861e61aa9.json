{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CardsTable.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Pagination, Box } from \"@mui/material\";\nimport { CollapsableCard } from './CollapsableCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardsTable = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const totalItems = data.length;\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const handlePageChange = (e, page) => {\n    setCurrentPage(page);\n  };\n  const generateTableData = data => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentPageData = data.slice(startIndex, endIndex);\n    //let tableData = []\n\n    // for (let i = 0; i < currentPageData.length; i++) {\n    //     let job = currentPageData[i]\n    //     tableData.push(\n    //         <TableRow key={i}>\n    //             <TableCell>\n    //                 <CollapsableCard\n    //                     content={job.content.job}\n    //                     collapsableContent={job.collapsableContent.rating}\n    //                 />\n    //             </TableCell>\n    //         </TableRow>\n    //     )\n    // }\n\n    return currentPageData;\n  };\n  const tableData = generateTableData(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-50 d-flex flex-column mx-auto align-items-center justify-cotnent-center\",\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: tableData.map((job, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(CollapsableCard, {\n                  style: {\n                    display: \"flex\",\n                    flexDirection: 'column',\n                    alignItems: \"center\",\n                    justifyContent: \"Center\",\n                    // margin: \"0 2rem\",\n                    width: \"100%\"\n                  },\n                  content: job.content,\n                  collapsableContent: job.collapsableContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 30\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: totalPages,\n      page: currentPage,\n      onChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CardsTable, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = CardsTable;\nvar _c;\n$RefreshReg$(_c, \"CardsTable\");","map":{"version":3,"names":["useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Pagination","Box","CollapsableCard","CardsTable","data","currentPage","setCurrentPage","itemsPerPage","totalItems","length","totalPages","Math","ceil","handlePageChange","e","page","generateTableData","startIndex","endIndex","currentPageData","slice","tableData","map","job","index","display","flexDirection","alignItems","justifyContent","width","content","collapsableContent"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/adminArea/CardsTable.jsx"],"sourcesContent":["import {useState} from 'react'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Pagination, Box} from \"@mui/material\"\r\nimport { CollapsableCard } from './CollapsableCard'\r\n\r\n\r\nexport const CardsTable = ({data}) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10;\r\n    const totalItems = data.length;\r\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n    const handlePageChange = (e, page) => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const generateTableData = (data) => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        const currentPageData = data.slice(startIndex, endIndex)\r\n        //let tableData = []\r\n\r\n        // for (let i = 0; i < currentPageData.length; i++) {\r\n        //     let job = currentPageData[i]\r\n        //     tableData.push(\r\n        //         <TableRow key={i}>\r\n        //             <TableCell>\r\n        //                 <CollapsableCard\r\n        //                     content={job.content.job}\r\n        //                     collapsableContent={job.collapsableContent.rating}\r\n        //                 />\r\n        //             </TableCell>\r\n        //         </TableRow>\r\n        //     )\r\n        // }\r\n        \r\n\r\n        return currentPageData\r\n    }\r\n\r\n    const tableData = generateTableData(data);\r\n\r\n    return (\r\n        <div className=\"w-50 d-flex flex-column mx-auto align-items-center justify-cotnent-center\">\r\n            <TableContainer>\r\n                <Table >\r\n                    <TableBody>\r\n                        {tableData.map((job, index)  => {\r\n                             return (\r\n                             <TableRow key={index}>\r\n                                <TableCell>\r\n                                    <CollapsableCard\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            flexDirection: 'column',\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"Center\",\r\n                                            // margin: \"0 2rem\",\r\n                                            width: \"100%\"\r\n                                        }}\r\n                                        content={job.content}\r\n                                        collapsableContent={job.collapsableContent}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            )\r\n                         })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Pagination\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={handlePageChange}\r\n            />\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAASC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,GAAG,QAAO,eAAe;AAChH,SAASC,eAAe,QAAQ,mBAAmB;AAAA;AAGnD,OAAO,MAAMC,UAAU,GAAG,QAAY;EAAA;EAAA,IAAX;IAACC;EAAI,CAAC;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMc,YAAY,GAAG,EAAE;EACvB,MAAMC,UAAU,GAAGJ,IAAI,CAACK,MAAM;EAC9B,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGD,YAAY,CAAC;EAEvD,MAAMM,gBAAgB,GAAG,CAACC,CAAC,EAAEC,IAAI,KAAK;IAClCT,cAAc,CAACS,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,iBAAiB,GAAIZ,IAAI,IAAK;IAChC,MAAMa,UAAU,GAAG,CAACZ,WAAW,GAAG,CAAC,IAAIE,YAAY;IACnD,MAAMW,QAAQ,GAAGD,UAAU,GAAGV,YAAY;IAC1C,MAAMY,eAAe,GAAGf,IAAI,CAACgB,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;IACxD;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA,OAAOC,eAAe;EAC1B,CAAC;EAED,MAAME,SAAS,GAAGL,iBAAiB,CAACZ,IAAI,CAAC;EAEzC,oBACI;IAAK,SAAS,EAAC,2EAA2E;IAAA,wBACtF,QAAC,cAAc;MAAA,uBACX,QAAC,KAAK;QAAA,uBACF,QAAC,SAAS;UAAA,UACLiB,SAAS,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAM;YAC3B,oBACA,QAAC,QAAQ;cAAA,uBACN,QAAC,SAAS;gBAAA,uBACN,QAAC,eAAe;kBACZ,KAAK,EAAE;oBACHC,OAAO,EAAE,MAAM;oBACfC,aAAa,EAAE,QAAQ;oBACvBC,UAAU,EAAE,QAAQ;oBACpBC,cAAc,EAAE,QAAQ;oBACxB;oBACAC,KAAK,EAAE;kBACX,CAAE;kBACF,OAAO,EAAEN,GAAG,CAACO,OAAQ;kBACrB,kBAAkB,EAAEP,GAAG,CAACQ;gBAAmB;kBAAA;kBAAA;kBAAA;gBAAA;cAC7C;gBAAA;gBAAA;gBAAA;cAAA;YACM,GAdAP,KAAK;cAAA;cAAA;cAAA;YAAA,QAeV;UAEd,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACK;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA,QACK,eAEjB,QAAC,UAAU;MACP,KAAK,EAAEd,UAAW;MAClB,IAAI,EAAEL,WAAY;MAClB,QAAQ,EAAEQ;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAxEYV,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}