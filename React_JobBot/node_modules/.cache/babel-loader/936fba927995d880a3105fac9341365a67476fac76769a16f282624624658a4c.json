{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\source\\\\repos\\\\JOBOT\\\\JOBOT\\\\React_JobBot\\\\src\\\\pages\\\\chatBotLogic\\\\components\\\\Options\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Options.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = props => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const submitted = false;\n  useEffect(() => {\n    setOptions(props.node.getJobs());\n  }, []); //maybe props.node_if_options>0\n\n  const handleOptionChange = event => {\n    const option = event.target.value;\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter(selectedOption => selectedOption !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Selected Options1: \", selectedOptions);\n    // handle submission logic\n    if (selectedOptions.includes(\"Nothing fits\")) {\n      props.actionProvider.handleJob(props.node, [\"Nothing fits\"]);\n    } else {\n      props.actionProvider.handleJob(props.node, selectedOptions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: options.map((opt, index) => {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkbox\",\n            type: \"checkbox\",\n            value: opt,\n            onChange: handleOptionChange,\n            disabled: opt != \"Nothing fits\" && selectedOptions.includes(\"Nothing fits\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), opt]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      }, [])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"option-button\",\n      disabled: submitted,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"e4MCsSeCfcM3pZfvXwXfIiGjEmY=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","Jobs","props","options","setOptions","selectedOptions","setSelectedOptions","submitted","node","getJobs","handleOptionChange","event","option","target","value","includes","filter","selectedOption","handleSubmit","preventDefault","console","log","actionProvider","handleJob","map","opt","index"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Jobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const submitted=false;\r\n\r\n  useEffect(\r\n    ()=>{\r\n        setOptions(props.node.getJobs())\r\n    }\r\n    ,[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options1: \", selectedOptions);\r\n    // handle submission logic\r\n    if(selectedOptions.includes(\"Nothing fits\")){\r\n        props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\r\n    }else{\r\n        props.actionProvider.handleJob(props.node,selectedOptions);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            <br />\r\n            <input\r\n            className=\"checkbox\"\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange}\r\n            disabled={(opt!=\"Nothing fits\")&&selectedOptions.includes(\"Nothing fits\")} />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={submitted}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAExC,OAAO,eAAe;AAAC;AAEvB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMQ,SAAS,GAAC,KAAK;EAErBP,SAAS,CACP,MAAI;IACAI,UAAU,CAACF,KAAK,CAACM,IAAI,CAACC,OAAO,EAAE,CAAC;EACpC,CAAC,EACA,EAAE,CAAC,CAAC;;EAEP,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACjC,IAAIT,eAAe,CAACU,QAAQ,CAACH,MAAM,CAAC,EAAE;MACpCN,kBAAkB,CAACD,eAAe,CAACW,MAAM,CAAEC,cAAc,IAAKA,cAAc,KAAKL,MAAM,CAAC,CAAC;IAC3F,CAAC,MAAM;MACLN,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEO,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMM,YAAY,GAAIP,KAAK,IAAK;IAC9BA,KAAK,CAACQ,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEhB,eAAe,CAAC;IACnD;IACA,IAAGA,eAAe,CAACU,QAAQ,CAAC,cAAc,CAAC,EAAC;MACxCb,KAAK,CAACoB,cAAc,CAACC,SAAS,CAACrB,KAAK,CAACM,IAAI,EAAC,CAAC,cAAc,CAAC,CAAC;IAC/D,CAAC,MAAI;MACDN,KAAK,CAACoB,cAAc,CAACC,SAAS,CAACrB,KAAK,CAACM,IAAI,EAACH,eAAe,CAAC;IAC9D;EACF,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEa,YAAa;IAAA,wBAC3B;MAAA,UACGf,OAAO,CAACqB,GAAG,CAAC,CAACC,GAAG,EAACC,KAAK,KAAI;QACzB,oBACA;UAAA,wBACE;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YACA,SAAS,EAAC,UAAU;YACpB,IAAI,EAAC,UAAU;YACf,KAAK,EAAED,GAAI;YACX,QAAQ,EAAEf,kBAAmB;YAC7B,QAAQ,EAAGe,GAAG,IAAE,cAAc,IAAGpB,eAAe,CAACU,QAAQ,CAAC,cAAc;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,EAC5EU,GAAG;QAAA,GARMC,KAAK;UAAA;UAAA;UAAA;QAAA,QAST;MACV,CAAC,EAAC,EAAE;IAAC;MAAA;MAAA;MAAA;IAAA,QAEC,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAC,eAAe;MAAC,QAAQ,EAAEnB,SAAU;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/E;AAEX,CAAC;AAAC,GArDIN,IAAI;AAAA,KAAJA,IAAI;AAuDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}