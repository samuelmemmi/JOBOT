{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\source\\\\repos\\\\JOBOT\\\\JOBOT\\\\React_JobBot\\\\src\\\\pages\\\\adminArea\\\\viewChatFlow.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./h.css\";\nimport './EditableList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ObjectItem(_ref) {\n  _s();\n  let {\n    item\n  } = _ref;\n  const [expanded, setExpanded] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useState(item.text);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const handleEditClick = () => {\n    setEditing(!editing);\n  };\n  const handleTextChange = event => {\n    setText(event.target.value);\n  };\n  const handleSave = () => {\n    setData(prevState => ({\n      ...prevState,\n      text: text\n    }));\n    setEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExpandClick,\n      children: expanded ? \"-\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.children.map(child => /*#__PURE__*/_jsxDEV(ObjectItem, {\n        item: child\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n_s(ObjectItem, \"2yEUr1DDLsM/jIvwvlAtGPxYD84=\");\n_c = ObjectItem;\nfunction ViewChatFlow() {\n  _s2();\n  const [data, setData] = useState({\n    text: \"example\",\n    children: []\n  });\n  const exportObject = () => {\n    const jsonString = JSON.stringify(data);\n    // code to export the JSON string\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ObjectItem, {\n      item: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), \";\", exportObject()]\n  }, void 0, true);\n}\n_s2(ViewChatFlow, \"ds182fdP9m+b7lq+QctCDFU3vSE=\");\n_c2 = ViewChatFlow;\nexport default ViewChatFlow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ObjectItem\");\n$RefreshReg$(_c2, \"ViewChatFlow\");","map":{"version":3,"names":["React","useState","ObjectItem","item","expanded","setExpanded","editing","setEditing","text","setText","handleExpandClick","handleEditClick","handleTextChange","event","target","value","handleSave","setData","prevState","children","map","child","ViewChatFlow","data","exportObject","jsonString","JSON","stringify"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./h.css\"\r\nimport './EditableList.css';\r\n\r\nfunction ObjectItem({ item }) {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [editing, setEditing] = useState(false);\r\n    const [text, setText] = useState(item.text);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  \r\n    const handleEditClick = () => {\r\n      setEditing(!editing);\r\n    };\r\n  \r\n    const handleTextChange = (event) => {\r\n      setText(event.target.value);\r\n    };\r\n  \r\n    const handleSave = () => {\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        text: text,\r\n      }));\r\n      setEditing(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <button onClick={handleExpandClick}>{expanded ? \"-\" : \"+\"}</button>\r\n        {editing ? (\r\n          <div>\r\n            <input type=\"text\" value={text} onChange={handleTextChange} />\r\n            <button onClick={handleSave}>Save</button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <span>{item.text}</span>\r\n            <button onClick={handleEditClick}>Edit</button>\r\n          </div>\r\n        )}\r\n        {expanded && (\r\n          <div>\r\n            {item.children.map((child) => (\r\n              <ObjectItem item={child} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\nfunction ViewChatFlow() {\r\n    const [data, setData] = useState({ text: \"example\", children: [] });\r\n\r\n    const exportObject = () => {\r\n        const jsonString = JSON.stringify(data);\r\n        // code to export the JSON string\r\n    };\r\n    \r\n    return (<>\r\n    <ObjectItem item={data} />;\r\n    {exportObject()}</>);\r\n}\r\n\r\n\r\nexport default ViewChatFlow;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,SAAS;AAChB,OAAO,oBAAoB;AAAC;AAAA;AAE5B,SAASC,UAAU,OAAW;EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACE,IAAI,CAACK,IAAI,CAAC;EAE3C,MAAME,iBAAiB,GAAG,MAAM;IAC9BL,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,MAAMO,eAAe,GAAG,MAAM;IAC5BJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAMM,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAM;IACvBC,OAAO,CAAEC,SAAS,KAAM;MACtB,GAAGA,SAAS;MACZV,IAAI,EAAEA;IACR,CAAC,CAAC,CAAC;IACHD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEG,iBAAkB;MAAA,UAAEN,QAAQ,GAAG,GAAG,GAAG;IAAG;MAAA;MAAA;MAAA;IAAA,QAAU,EAClEE,OAAO,gBACN;MAAA,wBACE;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEE,IAAK;QAAC,QAAQ,EAAEI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9D;QAAQ,OAAO,EAAEI,UAAW;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,gBAEN;MAAA,wBACE;QAAA,UAAOb,IAAI,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB;QAAQ,OAAO,EAAEG,eAAgB;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAElD,EACAP,QAAQ,iBACP;MAAA,UACGD,IAAI,CAACgB,QAAQ,CAACC,GAAG,CAAEC,KAAK,iBACvB,QAAC,UAAU;QAAC,IAAI,EAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QACzB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAhDMnB,UAAU;AAAA,KAAVA,UAAU;AAmDnB,SAASoB,YAAY,GAAG;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEN,OAAO,CAAC,GAAGhB,QAAQ,CAAC;IAAEO,IAAI,EAAE,SAAS;IAAEW,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEnE,MAAMK,YAAY,GAAG,MAAM;IACvB,MAAMC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IACvC;EACJ,CAAC;;EAED,oBAAQ;IAAA,wBACR,QAAC,UAAU;MAAC,IAAI,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,KAC1B,EAACC,YAAY,EAAE;EAAA,gBAAI;AACvB;AAAC,IAXQF,YAAY;AAAA,MAAZA,YAAY;AAcrB,eAAeA,YAAY;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}