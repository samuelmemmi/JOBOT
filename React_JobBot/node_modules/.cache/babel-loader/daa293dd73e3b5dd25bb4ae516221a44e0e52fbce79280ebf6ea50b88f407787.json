{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\source\\\\repos\\\\JOBOT\\\\JOBOT\\\\React_JobBot\\\\src\\\\pages\\\\chatBotLogic\\\\StartChat.jsx\";\nimport React from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport \"react-chatbot-kit/build/main.css\";\nimport config from \"./config\";\nimport ActionProvider from \"./ActionProvider\";\nimport MessageParser from \"./MessageParser\";\nimport \"./startChat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StartChat() {\n  // const [showBot, toggleBot] = useState(false);\n\n  // const saveMessages = (messages, HTMLString) => {\n  //   localStorage.setItem('chat_messages', JSON.stringify(messages));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatWindow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"800px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        config: config,\n        actionProvider: ActionProvider,\n        messageParser: MessageParser,\n        state: chatbotState //\n        // saveMessages={saveMessages}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = StartChat;\nexport default StartChat;\n\n//  <button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\n\n// Define a function to export the chatbot state\nfunction exportChatbotState(state) {\n  const serializedState = JSON.stringify(state);\n  // Do something with the serialized state, e.g. save it to a file or send it to a server\n}\n\n// Call the exportChatbotState function to export the chatbot state\nexportChatbotState(chatbotState);\nvar _c;\n$RefreshReg$(_c, \"StartChat\");","map":{"version":3,"names":["React","Chatbot","config","ActionProvider","MessageParser","StartChat","maxWidth","chatbotState","exportChatbotState","state","serializedState","JSON","stringify"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/StartChat.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Chatbot from \"react-chatbot-kit\";\r\nimport \"react-chatbot-kit/build/main.css\";\r\n\r\n\r\nimport config from \"./config\";\r\nimport ActionProvider from \"./ActionProvider\";\r\nimport MessageParser from \"./MessageParser\";\r\n\r\nimport \"./startChat.css\";\r\n\r\nfunction StartChat() {\r\n  // const [showBot, toggleBot] = useState(false);\r\n\r\n  // const saveMessages = (messages, HTMLString) => {\r\n  //   localStorage.setItem('chat_messages', JSON.stringify(messages));\r\n  // };\r\n  \r\n  return (\r\n    <div className=\"chatWindow\">\r\n      <div style={{ maxWidth: \"800px\" }}>\r\n      <Chatbot\r\n        config={config}\r\n        actionProvider={ActionProvider}\r\n        messageParser={MessageParser}\r\n        state={chatbotState}//\r\n        // saveMessages={saveMessages}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartChat;\r\n\r\n//  <button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\r\n\r\n// Define a function to export the chatbot state\r\nfunction exportChatbotState(state) {\r\n  const serializedState = JSON.stringify(state);\r\n  // Do something with the serialized state, e.g. save it to a file or send it to a server\r\n}\r\n\r\n// Call the exportChatbotState function to export the chatbot state\r\nexportChatbotState(chatbotState);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,kCAAkC;AAGzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,OAAO,iBAAiB;AAAC;AAEzB,SAASC,SAAS,GAAG;EACnB;;EAEA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB;MAAK,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAQ,CAAE;MAAA,uBAClC,QAAC,OAAO;QACN,MAAM,EAAEJ,MAAO;QACf,cAAc,EAAEC,cAAe;QAC/B,aAAa,EAAEC,aAAc;QAC7B,KAAK,EAAEG,YAAa;QACpB;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KApBQF,SAAS;AAsBlB,eAAeA,SAAS;;AAExB;;AAEA;AACA,SAASG,kBAAkB,CAACC,KAAK,EAAE;EACjC,MAAMC,eAAe,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;EAC7C;AACF;;AAEA;AACAD,kBAAkB,CAACD,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}