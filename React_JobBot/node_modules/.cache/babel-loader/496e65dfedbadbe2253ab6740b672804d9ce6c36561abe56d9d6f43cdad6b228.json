{"ast":null,"code":"import chatFlow from \"./convert_tree_to_json\";\nimport axios from 'axios';\nclass FetchText {\n  constructor() {\n    this.registrationDetails = {};\n    this.head = {};\n    this.selected = {};\n    this.historyChat = [];\n    this.jobs = [];\n    this.selectedJobs = [];\n    this.countNotFits = 0;\n    this.isFeedback = 0;\n    this.accuracyNode = {};\n    this.accuracyOptions = [];\n    this.isJobAccuracy = 0;\n    this.isRequirements = 0;\n    this.savedInDB = {};\n    ///////חייב לשמור את פרטי המשרות שהלקוח סך הכל בחר בDB\n  }\n\n  intialHead() {\n    try {\n      this.head = require('./decisionTree.json');\n    } catch (error) {\n      //console.error(`Error loading data: ${error}`);\n      this.head = chatFlow;\n      axios.post('/write-json', this.head, {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => {\n        console.log(response.data.message);\n      }).catch(error => {\n        console.error(error.response.data.error);\n      });\n    }\n  }\n  setNextResponse(node) {\n    this.head = node;\n  }\n  getNextResponse() {\n    return this.head;\n  }\n  setSelected(selected) {\n    this.selected = selected;\n  }\n  getSelected() {\n    return this.selected;\n  }\n  setHistoryChat(historyChat) {\n    this.historyChat = historyChat;\n  }\n  getHistoryChat() {\n    return this.historyChat;\n  }\n  setJobs(jobs) {\n    this.jobs = jobs;\n  }\n  getJobs() {\n    return this.jobs;\n  }\n  setSelectedJobs(selectedJobs) {\n    this.selectedJobs = selectedJobs;\n  }\n  getSelectedJobs() {\n    return this.selectedJobs;\n  }\n  incCountNotFits(countNotFits) {\n    this.countNotFits = countNotFits + 1;\n  }\n  getCountNotFits() {\n    return this.countNotFits;\n  }\n  setIsFeedback(val) {\n    this.isFeedback = val;\n  }\n  getIsFeedback() {\n    return this.isFeedback;\n  }\n  setAccuracyNode(accuracyNode) {\n    this.accuracyNode = accuracyNode;\n  }\n  getAccuracyNode() {\n    return this.accuracyNode;\n  }\n  setAccuracyOptions(accuracyOptions) {\n    this.accuracyOptions = accuracyOptions;\n  }\n  getAccuracyOptions() {\n    return this.accuracyOptions;\n  }\n  setIsJobAccuracy(isJobAccuracy) {\n    this.isJobAccuracy = isJobAccuracy;\n  }\n  getIsJobAccuracy() {\n    return this.isJobAccuracy;\n  }\n  setIsRequirements(isRequirements) {\n    this.isRequirements = isRequirements;\n  }\n  getIsRequirements() {\n    return this.isRequirements;\n  }\n  setRegistrationDetails(registrationDetails) {\n    this.registrationDetails = registrationDetails;\n  }\n  getRegistrationDetails() {\n    return this.registrationDetails;\n  }\n  setSavedInDB(savedInDB) {\n    this.savedInDB = savedInDB;\n  }\n  getSavedInDB() {\n    return this.savedInDB;\n  }\n}\nvar dec_tree = new FetchText();\ndec_tree.intialHead();\nexport default dec_tree;","map":{"version":3,"names":["chatFlow","axios","FetchText","constructor","registrationDetails","head","selected","historyChat","jobs","selectedJobs","countNotFits","isFeedback","accuracyNode","accuracyOptions","isJobAccuracy","isRequirements","savedInDB","intialHead","require","error","post","headers","then","response","console","log","data","message","catch","setNextResponse","node","getNextResponse","setSelected","getSelected","setHistoryChat","getHistoryChat","setJobs","getJobs","setSelectedJobs","getSelectedJobs","incCountNotFits","getCountNotFits","setIsFeedback","val","getIsFeedback","setAccuracyNode","getAccuracyNode","setAccuracyOptions","getAccuracyOptions","setIsJobAccuracy","getIsJobAccuracy","setIsRequirements","getIsRequirements","setRegistrationDetails","getRegistrationDetails","setSavedInDB","getSavedInDB","dec_tree"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/getFlowText.js"],"sourcesContent":["import chatFlow from \"./convert_tree_to_json\";\r\nimport axios from 'axios';\r\n\r\nclass FetchText{\r\n    constructor(){\r\n        this.registrationDetails={}\r\n        this.head={}\r\n        this.selected={}\r\n        this.historyChat=[]\r\n        this.jobs=[]\r\n        this.selectedJobs=[]\r\n        this.countNotFits=0;\r\n        this.isFeedback=0;\r\n        this.accuracyNode={}\r\n        this.accuracyOptions=[]\r\n        this.isJobAccuracy=0;\r\n        this.isRequirements=0;\r\n        this.savedInDB={};\r\n        ///////חייב לשמור את פרטי המשרות שהלקוח סך הכל בחר בDB\r\n    }\r\n\r\n    intialHead(){\r\n        try {\r\n            this.head = require('./decisionTree.json');\r\n          } catch (error) {\r\n            //console.error(`Error loading data: ${error}`);\r\n            this.head = chatFlow;\r\n            axios.post('/write-json', this.head, {\r\n                headers: {\r\n                'Content-type': 'application/json; charset=UTF-8' } \r\n              })\r\n              .then((response) => {\r\n                console.log(response.data.message);\r\n              })\r\n              .catch((error) => {\r\n                console.error(error.response.data.error);\r\n              });\r\n          }\r\n    }\r\n\r\n    setNextResponse(node){\r\n        this.head=node;\r\n    }\r\n\r\n    getNextResponse(){\r\n        return this.head;\r\n    }\r\n\r\n    setSelected(selected){\r\n        this.selected=selected;\r\n    }\r\n\r\n    getSelected(){\r\n        return this.selected;\r\n    }\r\n\r\n    setHistoryChat(historyChat){\r\n        this.historyChat=historyChat;\r\n    }\r\n\r\n    getHistoryChat(){\r\n        return this.historyChat;\r\n    }\r\n    setJobs(jobs){\r\n        this.jobs=jobs;\r\n    }\r\n\r\n    getJobs(){\r\n        return this.jobs;\r\n    }\r\n    setSelectedJobs(selectedJobs){\r\n        this.selectedJobs=selectedJobs;\r\n    }\r\n\r\n    getSelectedJobs(){\r\n        return this.selectedJobs;\r\n    }\r\n\r\n    incCountNotFits(countNotFits){\r\n        this.countNotFits=countNotFits+1;\r\n    }\r\n\r\n    getCountNotFits(){\r\n        return this.countNotFits;\r\n    }\r\n\r\n    setIsFeedback(val){\r\n        this.isFeedback=val;\r\n    }\r\n\r\n    getIsFeedback(){\r\n        return this.isFeedback;\r\n    }\r\n    setAccuracyNode(accuracyNode){\r\n        this.accuracyNode=accuracyNode;\r\n    }\r\n\r\n    getAccuracyNode(){\r\n        return this.accuracyNode;\r\n    }\r\n    setAccuracyOptions(accuracyOptions){\r\n        this.accuracyOptions=accuracyOptions;\r\n    }\r\n\r\n    getAccuracyOptions(){\r\n        return this.accuracyOptions;\r\n    }\r\n    setIsJobAccuracy(isJobAccuracy){\r\n        this.isJobAccuracy=isJobAccuracy;\r\n    }\r\n\r\n    getIsJobAccuracy(){\r\n        return this.isJobAccuracy;\r\n    }\r\n    setIsRequirements(isRequirements){\r\n        this.isRequirements=isRequirements;\r\n    }\r\n\r\n    getIsRequirements(){\r\n        return this.isRequirements;\r\n    }\r\n\r\n    setRegistrationDetails(registrationDetails){\r\n        this.registrationDetails=registrationDetails;\r\n    }\r\n    getRegistrationDetails(){\r\n        return this.registrationDetails;\r\n    }\r\n    setSavedInDB(savedInDB){\r\n        this.savedInDB=savedInDB;\r\n    }\r\n    getSavedInDB(){\r\n        return this.savedInDB;\r\n    }\r\n}\r\n\r\nvar dec_tree=new FetchText();\r\ndec_tree.intialHead()\r\n\r\nexport default dec_tree;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}