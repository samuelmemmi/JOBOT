{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\source\\\\repos\\\\JOBOT\\\\JOBOT\\\\React_JobBot\\\\src\\\\pages\\\\chatBotLogic\\\\config.js\";\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport dec_tree from \"./getFlowText.js\";\nimport FieldOptions from \"./components/Options/FieldOptions\";\nimport Quiz from \"./components/Quiz/Quiz\";\nimport Approval from \"./components/Options/Approval\";\nimport JobTitles from \"./components/Options/JobTitles\";\nimport Companies from \"./components/Options/Companies\";\nimport Areas from \"./components/Options/Areas\";\nimport JobTypes from \"./components/Options/JobTypes\";\nimport Jobs from \"./components/Options/Jobs\";\nimport EmailDisplay from \"./components/Options/EmailDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  botName: \"JOBOT\",\n  initialMessages: [createChatBotMessage(dec_tree.getNextResponse().text), createChatBotMessage(dec_tree.getNextResponse().children[0].text, {\n    widget: \"fieldOptions\"\n    // delay:2000\n  })],\n\n  // state: {\n  //   nodes: [dec_tree],\n  // },\n\n  widgets: [{\n    widgetName: \"fieldOptions\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(FieldOptions, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n    // mapStateToProps: [\n    //   \"nodes\",\n    // ]\n  }, {\n    widgetName: \"javascriptQuiz\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Quiz, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }, this),\n    props: {\n      questions: [{\n        question: \"What is closure?\",\n        answer: \"Closure is a way for a function to retain access to it's enclosing function scope after the execution of that function is finished.\",\n        id: 1\n      }, {\n        question: \"Explain prototypal inheritance\",\n        answer: \"Prototypal inheritance is a link between an object and an object store that holds shared properties. If a property is not found on the host object, javascript will check the prototype object.\",\n        id: 2\n      }]\n    }\n  }, {\n    widgetName: \"approval\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Approval, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n    // mapStateToProps: [\n    //   \"nodes\",\n    // ]\n  }, {\n    widgetName: \"jobTitles\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(JobTitles, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n  }, {\n    widgetName: \"companies\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Companies, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n  }, {\n    widgetName: \"areas\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Areas, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n  }, {\n    widgetName: \"jobTypes\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(JobTypes, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n  }, {\n    widgetName: \"jobs\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Jobs, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n  }, {\n    widgetName: \"emailDisplay\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(EmailDisplay, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 30\n    }, this),\n    props: {\n      node: dec_tree\n    }\n  }],\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: '#376B7E'\n    },\n    chatButton: {\n      backgroundColor: '#376B7E'\n    }\n  }\n};\nexport default config;","map":{"version":3,"names":["React","createChatBotMessage","dec_tree","FieldOptions","Quiz","Approval","JobTitles","Companies","Areas","JobTypes","Jobs","EmailDisplay","config","botName","initialMessages","getNextResponse","text","children","widget","widgets","widgetName","widgetFunc","props","node","questions","question","answer","id","customStyles","botMessageBox","backgroundColor","chatButton"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/config.js"],"sourcesContent":["import React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport dec_tree from \"./getFlowText.js\"\r\nimport FieldOptions from \"./components/Options/FieldOptions\";\r\nimport Quiz from \"./components/Quiz/Quiz\";\r\nimport Approval from \"./components/Options/Approval\";\r\nimport JobTitles from \"./components/Options/JobTitles\";\r\nimport Companies from \"./components/Options/Companies\";\r\nimport Areas from \"./components/Options/Areas\";\r\nimport JobTypes from \"./components/Options/JobTypes\";\r\nimport Jobs from \"./components/Options/Jobs\";\r\nimport EmailDisplay from \"./components/Options/EmailDisplay\";\r\n\r\n\r\n\r\nconst config = {\r\n  botName: \"JOBOT\",\r\n  initialMessages: [\r\n    createChatBotMessage(dec_tree.getNextResponse().text),\r\n    createChatBotMessage(dec_tree.getNextResponse().children[0].text, {\r\n      widget: \"fieldOptions\",\r\n      // delay:2000\r\n    }),\r\n  ],\r\n\r\n  // state: {\r\n  //   nodes: [dec_tree],\r\n  // },\r\n\r\n  widgets: [\r\n    {\r\n      widgetName: \"fieldOptions\",\r\n      widgetFunc: (props) => <FieldOptions {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n      // mapStateToProps: [\r\n      //   \"nodes\",\r\n      // ]\r\n    },\r\n    {\r\n      widgetName: \"javascriptQuiz\",\r\n      widgetFunc: (props) => <Quiz {...props} />,\r\n      props: {\r\n        questions: [\r\n          {\r\n            question: \"What is closure?\",\r\n            answer:\r\n              \"Closure is a way for a function to retain access to it's enclosing function scope after the execution of that function is finished.\",\r\n            id: 1,\r\n          },\r\n          {\r\n            question: \"Explain prototypal inheritance\",\r\n            answer:\r\n              \"Prototypal inheritance is a link between an object and an object store that holds shared properties. If a property is not found on the host object, javascript will check the prototype object.\",\r\n            id: 2,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      widgetName: \"approval\",\r\n      widgetFunc: (props) => <Approval {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n      // mapStateToProps: [\r\n      //   \"nodes\",\r\n      // ]\r\n    },\r\n    {\r\n      widgetName: \"jobTitles\",\r\n      widgetFunc: (props) => <JobTitles {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n    },\r\n    {\r\n      widgetName: \"companies\",\r\n      widgetFunc: (props) => <Companies {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n    },\r\n    {\r\n      widgetName: \"areas\",\r\n      widgetFunc: (props) => <Areas {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n    },\r\n    {\r\n      widgetName: \"jobTypes\",\r\n      widgetFunc: (props) => <JobTypes {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n    },\r\n    {\r\n      widgetName: \"jobs\",\r\n      widgetFunc: (props) => <Jobs {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n    },\r\n    {\r\n      widgetName: \"emailDisplay\",\r\n      widgetFunc: (props) => <EmailDisplay {...props} />,\r\n      props: {\r\n        node:dec_tree\r\n      }\r\n    },\r\n    \r\n  ],\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: '#376B7E',\r\n    },\r\n    chatButton: {\r\n      backgroundColor: '#376B7E',\r\n    },\r\n  },\r\n};\r\n\r\nexport default config;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}