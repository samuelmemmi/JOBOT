{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.greet = () => {\n      const message = this.createChatBotMessage(\"Hello friend.\");\n      this.addMessageToState(message);\n    };\n    this.handleField = (node, opt) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].children[1].text, {\n        widget: \"jobTitles\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        field: opt\n      });\n      node.setHistoryChat([...node.getHistoryChat(), {\n        bot: [node.getNextResponse().text, node.getNextResponse().children[0].text]\n      }, {\n        user: [opt]\n      }, {\n        bot: [node.getNextResponse().children[0].children[1].text]\n      }]);\n      console.log(\"how \", node.getHistoryChat());\n      node.setNextResponse(node.getNextResponse().children[0].children[1]);\n      this.addMessageToState(message);\n    };\n    this.handleOtherField = (node, opt) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].children[0].text, {\n        widget: \"approval\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        field: opt\n      });\n      node.setHistoryChat([...node.getHistoryChat(), {\n        bot: [node.getNextResponse().text, node.getNextResponse().children[0].text]\n      }, {\n        user: [opt]\n      }, {\n        bot: [node.getNextResponse().children[0].children[0].text]\n      }]);\n      console.log(\"how \", node.getHistoryChat());\n      node.setNextResponse(node.getNextResponse().children[0].children[0]);\n      this.addMessageToState(message);\n    };\n    this.handleJobTitle = (node, opts) => {\n      var txt = node.getNextResponse().children[0].text;\n      const message = this.createChatBotMessage(txt, {\n        widget: \"companies\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        'job titles': opts\n      });\n      node.setHistoryChat([...node.getHistoryChat(), {\n        user: opts\n      }, {\n        bot: [txt]\n      }]);\n      node.setNextResponse(node.getNextResponse().children[0]);\n      this.addMessageToState(message);\n    };\n    this.handleCompany = (node, opts) => {\n      var txt1 = node.getNextResponse().children[0].text;\n      const message1 = this.createChatBotMessage(txt1);\n      this.addMessageToState(message1);\n      var txt2 = node.getNextResponse().children[0].children[0].text;\n      const message2 = this.createChatBotMessage(txt2, {\n        widget: \"areas\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        companies: opts\n      });\n      node.setHistoryChat([...node.getHistoryChat(), {\n        user: opts\n      }, {\n        bot: [txt1, txt2]\n      }]);\n      node.setNextResponse(node.getNextResponse().children[0].children[0]);\n      this.addMessageToState(message2);\n    };\n    this.addMessageToState = message => {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          messages: [...prevState.messages, message]\n        };\n      });\n    };\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  handleApproval(node, opt) {\n    const message = this.createChatBotMessage(node.getNextResponse().children[0].text);\n    node.setSelected({\n      ...node.getSelected(),\n      approval: opt\n    });\n    node.setHistoryChat([...node.getHistoryChat(), {\n      user: [opt]\n    }, {\n      bot: [node.getNextResponse().children[0].text]\n    }]);\n    console.log(\"how \", node.getHistoryChat());\n    node.setNextResponse(node.getNextResponse().children[0]);\n    this.addMessageToState(message);\n  }\n  handleArea(node, opts) {\n    var txt1 = node.getNextResponse().children[0].text;\n    const message1 = this.createChatBotMessage(txt1);\n    this.addMessageToState(message1);\n    var txt2 = node.getNextResponse().children[0].children[0].text;\n    const message2 = this.createChatBotMessage(txt2, {\n      widget: \"jobTypes\"\n    });\n    node.setSelected({\n      ...node.getSelected(),\n      areas: opts\n    });\n    node.setHistoryChat([...node.getHistoryChat(), {\n      user: opts\n    }, {\n      bot: [txt1, txt2]\n    }]);\n    node.setNextResponse(node.getNextResponse().children[0].children[0]);\n    this.addMessageToState(message2);\n  }\n  handleJobType(node, opts) {\n    var txt = node.getNextResponse().children[0].text;\n    const message = this.createChatBotMessage(txt, {\n      widget: \"\"\n    });\n    node.setSelected({\n      ...node.getSelected(),\n      'job Types': opts\n    });\n    node.setHistoryChat([...node.getHistoryChat(), {\n      user: opts\n    }, {\n      bot: [txt1, txt2]\n    }]);\n    node.setNextResponse(node.getNextResponse().children[0]);\n    this.addMessageToState(message);\n    //server\n    //var t=console.log(node.getSelected())\n  }\n}\n\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","greet","message","addMessageToState","handleField","node","opt","getNextResponse","children","text","widget","setSelected","getSelected","field","setHistoryChat","getHistoryChat","bot","user","console","log","setNextResponse","handleOtherField","handleJobTitle","opts","txt","handleCompany","txt1","message1","txt2","message2","companies","setState","prevState","messages","handleApproval","approval","handleArea","areas","handleJobType"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/ActionProvider.js"],"sourcesContent":["class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  greet = () => {\r\n    const message = this.createChatBotMessage(\"Hello friend.\");\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleField = (node,opt) => {\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[1].text,\r\n      {\r\n        widget: \"jobTitles\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),field:opt})\r\n    node.setHistoryChat([...node.getHistoryChat(),{bot:[node.getNextResponse().text,node.getNextResponse().children[0].text]},{user:[opt]},{bot:[node.getNextResponse().children[0].children[1].text]}])\r\n    console.log(\"how \",node.getHistoryChat())\r\n    node.setNextResponse(node.getNextResponse().children[0].children[1])\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleOtherField = (node,opt)=>{\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[0].text,\r\n      {\r\n        widget: \"approval\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),field:opt});\r\n    node.setHistoryChat([...node.getHistoryChat(),{bot:[node.getNextResponse().text,node.getNextResponse().children[0].text]},{user:[opt]},{bot:[node.getNextResponse().children[0].children[0].text]}])\r\n    console.log(\"how \",node.getHistoryChat())\r\n    node.setNextResponse(node.getNextResponse().children[0].children[0])\r\n    this.addMessageToState(message);\r\n  }\r\n\r\n  handleApproval(node,opt){\r\n    const message = this.createChatBotMessage(node.getNextResponse().children[0].text);\r\n    node.setSelected({...node.getSelected(),approval:opt});\r\n    node.setHistoryChat([...node.getHistoryChat(),{user:[opt]},{bot:[node.getNextResponse().children[0].text]}]);\r\n    console.log(\"how \",node.getHistoryChat());\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    this.addMessageToState(message);\r\n  }\r\n\r\n  handleJobTitle = (node,opts) => {\r\n    var txt=node.getNextResponse().children[0].text;\r\n    const message = this.createChatBotMessage(\r\n      txt,\r\n      {\r\n        widget: \"companies\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),'job titles':opts})\r\n    node.setHistoryChat([...node.getHistoryChat(),{user:opts},{bot:[txt]}])\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleCompany = (node,opts) => {\r\n    var txt1=node.getNextResponse().children[0].text;\r\n    const message1=this.createChatBotMessage(txt1);\r\n    this.addMessageToState(message1);\r\n    \r\n    var txt2=node.getNextResponse().children[0].children[0].text;\r\n    const message2 = this.createChatBotMessage(\r\n      txt2,\r\n      {\r\n        widget: \"areas\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),companies:opts})\r\n    node.setHistoryChat([...node.getHistoryChat(),{user:opts},{bot:[txt1,txt2]}])\r\n    node.setNextResponse(node.getNextResponse().children[0].children[0])\r\n    this.addMessageToState(message2);\r\n  };\r\n\r\n  handleArea(node,opts){\r\n    var txt1=node.getNextResponse().children[0].text;\r\n    const message1=this.createChatBotMessage(txt1);\r\n    this.addMessageToState(message1);\r\n\r\n    var txt2=node.getNextResponse().children[0].children[0].text;\r\n    const message2 = this.createChatBotMessage(\r\n      txt2,\r\n      {\r\n        widget: \"jobTypes\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(), areas:opts})\r\n    node.setHistoryChat([...node.getHistoryChat(),{user:opts},{bot:[txt1,txt2]}])\r\n    node.setNextResponse(node.getNextResponse().children[0].children[0])\r\n    this.addMessageToState(message2);\r\n  }\r\n\r\n  handleJobType(node,opts){\r\n    var txt=node.getNextResponse().children[0].text;\r\n    const message = this.createChatBotMessage(\r\n      txt,\r\n      {\r\n        widget: \"\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),'job Types':opts})\r\n    node.setHistoryChat([...node.getHistoryChat(),{user:opts},{bot:[txt1,txt2]}])\r\n\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    this.addMessageToState(message);\r\n    //server\r\n    //var t=console.log(node.getSelected())\r\n\r\n  }\r\n\r\n  addMessageToState = (message) => {\r\n    this.setState((prevState) =>{\r\n      return {\r\n      ...prevState,\r\n      messages: [...prevState.messages, message],\r\n      };\r\n    });\r\n  };\r\n\r\n}\r\n\r\nexport default ActionProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}