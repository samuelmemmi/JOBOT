{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\source\\\\repos\\\\JOBOT\\\\JOBOT\\\\React_JobBot\\\\src\\\\pages\\\\adminArea\\\\viewChatFlow.jsx\",\n  _s = $RefreshSig$();\nimport chatFlow from '../chatBotLogic/convert_tree_to_json.js';\nimport \"./h.css\";\nimport './EditableList.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditableTree = _ref => {\n  _s();\n  let {\n    text,\n    children,\n    description\n  } = _ref;\n  const [editedText, setEditedText] = useState(text);\n  const [isExpanded, setExpanded] = useState(false);\n  const [isFinishEdit, setFinishEdit] = useState(false);\n  const handleTextChange = event => {\n    if (isFinishEdit) {\n      setEditedText(event.target.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"vertix\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"age\",\n        type: \"text\",\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"person\",\n        type: \"text\",\n        value: editedText,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: () => setFinishEdit(!isFinishEdit),\n        children: isFinishEdit ? 'Finish Edit' : 'Edit Formulation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), children && children.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => setExpanded(!isExpanded),\n          children: isExpanded ? 'Collapse' : 'Expand'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isExpanded && children && children.length > 0 && children.map((child, index) => /*#__PURE__*/_jsxDEV(EditableTree, {\n      text: child.text,\n      children: child.children,\n      description: child.title\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableTree, \"PsDx96Vh3GyQY4WLMeJ3DLHsqeU=\");\n_c = EditableTree;\nconst ViewChatFlow = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pedigree-tree\",\n    children: [/*#__PURE__*/_jsxDEV(EditableTree, {\n      text: chatFlow.text,\n      children: chatFlow.children,\n      description: chatFlow.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), chatFlow.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ViewChatFlow;\nexport default ViewChatFlow;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditableTree\");\n$RefreshReg$(_c2, \"ViewChatFlow\");","map":{"version":3,"names":["chatFlow","React","useState","EditableTree","text","children","description","editedText","setEditedText","isExpanded","setExpanded","isFinishEdit","setFinishEdit","handleTextChange","event","target","value","length","map","child","index","title","ViewChatFlow"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/adminArea/viewChatFlow.jsx"],"sourcesContent":["import chatFlow from '../chatBotLogic/convert_tree_to_json.js';\r\nimport \"./h.css\"\r\nimport './EditableList.css';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst EditableTree = ({ text, children, description }) => {\r\n  const [editedText, setEditedText] = useState(text);\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [isFinishEdit, setFinishEdit]= useState(false);\r\n\r\n\r\n  const handleTextChange = (event) => {\r\n    if(isFinishEdit){\r\n      setEditedText(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      <li className='vertix'>\r\n\r\n      <input className=\"age\" type=\"text\" value={description} />\r\n\r\n      <input className=\"person\" type=\"text\" value={editedText} onChange={handleTextChange} />\r\n      \r\n      {/* <br/> */}\r\n\r\n      <button className=\"add-button\" onClick={() => setFinishEdit(!isFinishEdit)}>\r\n          {isFinishEdit ? 'Finish Edit' : 'Edit Formulation'}\r\n      </button>\r\n\r\n      {children && children.length > 0 && (\r\n      <>\r\n          <button className=\"add-button\" onClick={() => setExpanded(!isExpanded)}>\r\n          {isExpanded ? 'Collapse' : 'Expand'}\r\n          </button>\r\n      </>\r\n      )}\r\n\r\n      </li>\r\n      {isExpanded && children&&children.length > 0&&(children.map((child, index) => (\r\n        <EditableTree\r\n          key={index}\r\n          text={child.text}\r\n          children={child.children}\r\n          description={child.title}\r\n        />\r\n      )))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst ViewChatFlow = () => {\r\n  return (\r\n    <div className=\"pedigree-tree\">\r\n      <EditableTree text={chatFlow.text} children={chatFlow.children} description={chatFlow.title} />\r\n      {chatFlow.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewChatFlow;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,yCAAyC;AAC9D,OAAO,SAAS;AAChB,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAGxC,MAAMC,YAAY,GAAG,QAAqC;EAAA;EAAA,IAApC;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAY,CAAC;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAACE,IAAI,CAAC;EAClD,MAAM,CAACK,UAAU,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,YAAY,EAAEC,aAAa,CAAC,GAAEV,QAAQ,CAAC,KAAK,CAAC;EAGpD,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAGH,YAAY,EAAC;MACdH,aAAa,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACnC;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,QAAQ;MAAA,wBAEtB;QAAO,SAAS,EAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEV;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAEzD;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEC,UAAW;QAAC,QAAQ,EAAEM;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eAIvF;QAAQ,SAAS,EAAC,YAAY;QAAC,OAAO,EAAE,MAAMD,aAAa,CAAC,CAACD,YAAY,CAAE;QAAA,UACtEA,YAAY,GAAG,aAAa,GAAG;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC7C,EAERN,QAAQ,IAAIA,QAAQ,CAACY,MAAM,GAAG,CAAC,iBAChC;QAAA,uBACI;UAAQ,SAAS,EAAC,YAAY;UAAC,OAAO,EAAE,MAAMP,WAAW,CAAC,CAACD,UAAU,CAAE;UAAA,UACtEA,UAAU,GAAG,UAAU,GAAG;QAAQ;UAAA;UAAA;UAAA;QAAA;MAC1B,iBAEZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAEI,EACJA,UAAU,IAAIJ,QAAQ,IAAEA,QAAQ,CAACY,MAAM,GAAG,CAAC,IAAGZ,QAAQ,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvE,QAAC,YAAY;MAEX,IAAI,EAAED,KAAK,CAACf,IAAK;MACjB,QAAQ,EAAEe,KAAK,CAACd,QAAS;MACzB,WAAW,EAAEc,KAAK,CAACE;IAAM,GAHpBD,KAAK;MAAA;MAAA;MAAA;IAAA,QAKb,CAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAET,CAAC;AAAC,GA7CIjB,YAAY;AAAA,KAAZA,YAAY;AA+ClB,MAAMmB,YAAY,GAAG,MAAM;EACzB,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B,QAAC,YAAY;MAAC,IAAI,EAAEtB,QAAQ,CAACI,IAAK;MAAC,QAAQ,EAAEJ,QAAQ,CAACK,QAAS;MAAC,WAAW,EAAEL,QAAQ,CAACqB;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9FrB,QAAQ,CAACI,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEV,CAAC;AAAC,MAPIkB,YAAY;AASlB,eAAeA,YAAY;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}