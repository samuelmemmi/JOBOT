{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Companies.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Options.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Companies = props => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [submitted, setSubmitted] = useState(true);\n  useEffect(() => {\n    var selectedField = props.node.getSelected().field;\n    setOptions(props.node.getNextResponse().options[0][selectedField]);\n  }, []); //maybe props.node_if_options>0\n\n  const handleOptionChange = event => {\n    const option = event.target.value;\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter(selectedOption => selectedOption !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  const isFormValid = () => {\n    return Object.values(selectedOptions).some(isChecked => isChecked) && submitted;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Selected Options: \", selectedOptions);\n    // handle submission logic\n    setSubmitted(false);\n    props.actionProvider.handleCompany(props.node, selectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"listOptions\",\n      children: options.map((opt, index) => {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: opt,\n            onChange: handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), opt]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      }, [])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"option-button\",\n      disabled: !isFormValid(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Companies, \"rlxObq25s13PAXVcX2LJt2VfWAc=\");\n_c = Companies;\nexport default Companies;\nvar _c;\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Companies","props","_s","options","setOptions","selectedOptions","setSelectedOptions","submitted","setSubmitted","selectedField","node","getSelected","field","getNextResponse","handleOptionChange","event","option","target","value","includes","filter","selectedOption","isFormValid","Object","values","some","isChecked","handleSubmit","preventDefault","console","log","actionProvider","handleCompany","onSubmit","children","className","map","opt","index","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Companies.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Companies = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [submitted,setSubmitted]=useState(true);\r\n\r\n\r\n  useEffect(\r\n    ()=>{\r\n        var selectedField=props.node.getSelected().field;\r\n        setOptions(props.node.getNextResponse().options[0][selectedField])\r\n    }\r\n    ,[]);//maybe props.node_if_options>0\r\n\r\n  const handleOptionChange = (event) => {\r\n    const option = event.target.value;\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return Object.values(selectedOptions).some((isChecked) => isChecked)&&submitted;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Selected Options: \", selectedOptions);\r\n    // handle submission logic\r\n    setSubmitted(false);\r\n    props.actionProvider.handleCompany(props.node,selectedOptions);\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className=\"listOptions\">\r\n        {options.map((opt,index) =>{\r\n          return(\r\n          <label key={index}>\r\n            {/* <br /> */}\r\n            <input\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            onChange={handleOptionChange} />\r\n            {opt}\r\n          </label>);\r\n        },[])\r\n        }\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" className=\"option-button\" disabled={!isFormValid()}>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}