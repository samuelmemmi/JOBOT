{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Options.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = props => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    setOptions(props.node.getJobs());\n  }, []); //maybe props.node_if_options>0\n\n  const handleOptionChange = event => {\n    const option = event.target.value;\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter(selectedOption => selectedOption !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Selected Options1: \", selectedOptions);\n    // handle submission logic\n    setSubmitted(true);\n    if (selectedOptions.includes(\"Nothing fits\")) {\n      props.node.incCountNotFits(props.node.getCountNotFits());\n      console.log(\"count \", props.node.getCountNotFits());\n      props.actionProvider.handleJob(props.node, [\"Nothing fits\"]);\n    } else {\n      props.actionProvider.handleJob(props.node, selectedOptions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: options.map((opt, index) => {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkbox\",\n            type: \"checkbox\",\n            value: opt,\n            onChange: handleOptionChange,\n            disabled: opt !== \"Nothing fits\" && selectedOptions.includes(\"Nothing fits\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), opt]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      }, [])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"option-button\",\n      disabled: submitted,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"galQLVfc+XG/4/D+TL8EqcCm0WE=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","Jobs","props","options","setOptions","selectedOptions","setSelectedOptions","submitted","setSubmitted","node","getJobs","handleOptionChange","event","option","target","value","includes","filter","selectedOption","handleSubmit","preventDefault","console","log","incCountNotFits","getCountNotFits","actionProvider","handleJob","map","opt","index"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/Jobs.jsx"],"sourcesContent":["import React from \"react\";\nimport {useState,useEffect} from \"react\";\n\nimport \"./Options.css\";\n\nconst Jobs = (props) => {\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [submitted,setSubmitted]=useState(false);\n\n  useEffect(\n    ()=>{\n        setOptions(props.node.getJobs())\n    }\n    ,[]);//maybe props.node_if_options>0\n\n  const handleOptionChange = (event) => {\n    const option = event.target.value;\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Selected Options1: \", selectedOptions);\n    // handle submission logic\n    setSubmitted(true);\n    if(selectedOptions.includes(\"Nothing fits\")){\n      props.node.incCountNotFits(props.node.getCountNotFits());\n      console.log(\"count \",props.node.getCountNotFits())\n      props.actionProvider.handleJob(props.node,[\"Nothing fits\"]);\n    }else{\n      props.actionProvider.handleJob(props.node,selectedOptions);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        {options.map((opt,index) =>{\n          return(\n          <label key={index}>\n            <br />\n            <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            value={opt}\n            onChange={handleOptionChange}\n            disabled={(opt!==\"Nothing fits\")&&selectedOptions.includes(\"Nothing fits\")} />\n            {opt}\n          </label>);\n        },[])\n        }\n      </label>\n      <br />\n      <button type=\"submit\" className=\"option-button\" disabled={submitted}>Submit</button>\n    </form>\n  );\n};\n\nexport default Jobs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAExC,OAAO,eAAe;AAAC;AAEvB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAE9CC,SAAS,CACP,MAAI;IACAI,UAAU,CAACF,KAAK,CAACO,IAAI,CAACC,OAAO,EAAE,CAAC;EACpC,CAAC,EACA,EAAE,CAAC,CAAC;;EAEP,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACjC,IAAIV,eAAe,CAACW,QAAQ,CAACH,MAAM,CAAC,EAAE;MACpCP,kBAAkB,CAACD,eAAe,CAACY,MAAM,CAAEC,cAAc,IAAKA,cAAc,KAAKL,MAAM,CAAC,CAAC;IAC3F,CAAC,MAAM;MACLP,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEQ,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMM,YAAY,GAAIP,KAAK,IAAK;IAC9BA,KAAK,CAACQ,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEjB,eAAe,CAAC;IACnD;IACAG,YAAY,CAAC,IAAI,CAAC;IAClB,IAAGH,eAAe,CAACW,QAAQ,CAAC,cAAc,CAAC,EAAC;MAC1Cd,KAAK,CAACO,IAAI,CAACc,eAAe,CAACrB,KAAK,CAACO,IAAI,CAACe,eAAe,EAAE,CAAC;MACxDH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACpB,KAAK,CAACO,IAAI,CAACe,eAAe,EAAE,CAAC;MAClDtB,KAAK,CAACuB,cAAc,CAACC,SAAS,CAACxB,KAAK,CAACO,IAAI,EAAC,CAAC,cAAc,CAAC,CAAC;IAC7D,CAAC,MAAI;MACHP,KAAK,CAACuB,cAAc,CAACC,SAAS,CAACxB,KAAK,CAACO,IAAI,EAACJ,eAAe,CAAC;IAC5D;EACF,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEc,YAAa;IAAA,wBAC3B;MAAA,UACGhB,OAAO,CAACwB,GAAG,CAAC,CAACC,GAAG,EAACC,KAAK,KAAI;QACzB,oBACA;UAAA,wBACE;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YACA,SAAS,EAAC,UAAU;YACpB,IAAI,EAAC,UAAU;YACf,KAAK,EAAED,GAAI;YACX,QAAQ,EAAEjB,kBAAmB;YAC7B,QAAQ,EAAGiB,GAAG,KAAG,cAAc,IAAGvB,eAAe,CAACW,QAAQ,CAAC,cAAc;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,EAC7EY,GAAG;QAAA,GARMC,KAAK;UAAA;UAAA;UAAA;QAAA,QAST;MACV,CAAC,EAAC,EAAE;IAAC;MAAA;MAAA;MAAA;IAAA,QAEC,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAC,eAAe;MAAC,QAAQ,EAAEtB,SAAU;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/E;AAEX,CAAC;AAAC,GAxDIN,IAAI;AAAA,KAAJA,IAAI;AA0DV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}