{"ast":null,"code":"import chatFlow from \"./convert_tree_to_json\";\nimport axios from 'axios';\nclass FetchText {\n  constructor() {\n    this.head = {};\n    this.selected = {};\n    this.historyChat = [];\n    this.jobs = [];\n    this.selectedJobs = [];\n  }\n  intialHead() {\n    try {\n      // this.head = require('./decisionTree.json');\n      this.head = chatFlow;\n      axios.post('/write-json', this.head, {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => {\n        console.log(response.data.message);\n      }).catch(error => {\n        console.error(error.response.data.error);\n      });\n    } catch (error) {\n      //console.error(`Error loading data: ${error}`);\n      this.head = chatFlow;\n      axios.post('/write-json', this.head, {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => {\n        console.log(response.data.message);\n      }).catch(error => {\n        console.error(error.response.data.error);\n      });\n    }\n  }\n  setNextResponse(node) {\n    this.head = node;\n  }\n  getNextResponse() {\n    return this.head;\n  }\n  setSelected(selected) {\n    this.selected = selected;\n  }\n  getSelected() {\n    return this.selected;\n  }\n  setHistoryChat(historyChat) {\n    this.historyChat = historyChat;\n  }\n  getHistoryChat() {\n    return this.historyChat;\n  }\n  setJobs(jobs) {\n    this.jobs = jobs;\n  }\n  getJobs() {\n    return this.jobs;\n  }\n  setSelectedJobs(selectedJobs) {\n    this.selectedJobs = selectedJobs;\n  }\n  getSelectedJobs() {\n    return this.selectedJobs;\n  }\n}\nvar dec_tree = new FetchText();\ndec_tree.intialHead();\nexport default dec_tree;","map":{"version":3,"names":["chatFlow","axios","FetchText","constructor","head","selected","historyChat","jobs","selectedJobs","intialHead","post","headers","then","response","console","log","data","message","catch","error","setNextResponse","node","getNextResponse","setSelected","getSelected","setHistoryChat","getHistoryChat","setJobs","getJobs","setSelectedJobs","getSelectedJobs","dec_tree"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/getFlowText.js"],"sourcesContent":["import chatFlow from \"./convert_tree_to_json\";\r\nimport axios from 'axios';\r\n\r\nclass FetchText{\r\n    constructor(){\r\n        this.head={}\r\n        this.selected={}\r\n        this.historyChat=[]\r\n        this.jobs=[]\r\n        this.selectedJobs=[]\r\n    }\r\n\r\n    intialHead(){\r\n        try {\r\n            // this.head = require('./decisionTree.json');\r\n            this.head = chatFlow;\r\n            axios.post('/write-json', this.head, {\r\n                headers: {\r\n                'Content-type': 'application/json; charset=UTF-8' } \r\n              })\r\n              .then((response) => {\r\n                console.log(response.data.message);\r\n              })\r\n              .catch((error) => {\r\n                console.error(error.response.data.error);\r\n              });\r\n          } catch (error) {\r\n            //console.error(`Error loading data: ${error}`);\r\n            this.head = chatFlow;\r\n            axios.post('/write-json', this.head, {\r\n                headers: {\r\n                'Content-type': 'application/json; charset=UTF-8' } \r\n              })\r\n              .then((response) => {\r\n                console.log(response.data.message);\r\n              })\r\n              .catch((error) => {\r\n                console.error(error.response.data.error);\r\n              });\r\n          }\r\n    }\r\n\r\n    setNextResponse(node){\r\n        this.head=node;\r\n    }\r\n\r\n    getNextResponse(){\r\n        return this.head;\r\n    }\r\n\r\n    setSelected(selected){\r\n        this.selected=selected;\r\n    }\r\n\r\n    getSelected(){\r\n        return this.selected;\r\n    }\r\n\r\n    setHistoryChat(historyChat){\r\n        this.historyChat=historyChat;\r\n    }\r\n\r\n    getHistoryChat(){\r\n        return this.historyChat;\r\n    }\r\n    setJobs(jobs){\r\n        this.jobs=jobs;\r\n    }\r\n\r\n    getJobs(){\r\n        return this.jobs;\r\n    }\r\n    setSelectedJobs(selectedJobs){\r\n        this.selectedJobs=selectedJobs;\r\n    }\r\n\r\n    getSelectedJobs(){\r\n        return this.selectedJobs;\r\n    }\r\n}\r\n\r\nvar dec_tree=new FetchText();\r\ndec_tree.intialHead()\r\nexport default dec_tree;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS;EACXC,WAAW,GAAE;IACT,IAAI,CAACC,IAAI,GAAC,CAAC,CAAC;IACZ,IAAI,CAACC,QAAQ,GAAC,CAAC,CAAC;IAChB,IAAI,CAACC,WAAW,GAAC,EAAE;IACnB,IAAI,CAACC,IAAI,GAAC,EAAE;IACZ,IAAI,CAACC,YAAY,GAAC,EAAE;EACxB;EAEAC,UAAU,GAAE;IACR,IAAI;MACA;MACA,IAAI,CAACL,IAAI,GAAGJ,QAAQ;MACpBC,KAAK,CAACS,IAAI,CAAC,aAAa,EAAE,IAAI,CAACN,IAAI,EAAE;QACjCO,OAAO,EAAE;UACT,cAAc,EAAE;QAAkC;MACpD,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MACpC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBL,OAAO,CAACK,KAAK,CAACA,KAAK,CAACN,QAAQ,CAACG,IAAI,CAACG,KAAK,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd;MACA,IAAI,CAACf,IAAI,GAAGJ,QAAQ;MACpBC,KAAK,CAACS,IAAI,CAAC,aAAa,EAAE,IAAI,CAACN,IAAI,EAAE;QACjCO,OAAO,EAAE;UACT,cAAc,EAAE;QAAkC;MACpD,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MACpC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBL,OAAO,CAACK,KAAK,CAACA,KAAK,CAACN,QAAQ,CAACG,IAAI,CAACG,KAAK,CAAC;MAC1C,CAAC,CAAC;IACN;EACN;EAEAC,eAAe,CAACC,IAAI,EAAC;IACjB,IAAI,CAACjB,IAAI,GAACiB,IAAI;EAClB;EAEAC,eAAe,GAAE;IACb,OAAO,IAAI,CAAClB,IAAI;EACpB;EAEAmB,WAAW,CAAClB,QAAQ,EAAC;IACjB,IAAI,CAACA,QAAQ,GAACA,QAAQ;EAC1B;EAEAmB,WAAW,GAAE;IACT,OAAO,IAAI,CAACnB,QAAQ;EACxB;EAEAoB,cAAc,CAACnB,WAAW,EAAC;IACvB,IAAI,CAACA,WAAW,GAACA,WAAW;EAChC;EAEAoB,cAAc,GAAE;IACZ,OAAO,IAAI,CAACpB,WAAW;EAC3B;EACAqB,OAAO,CAACpB,IAAI,EAAC;IACT,IAAI,CAACA,IAAI,GAACA,IAAI;EAClB;EAEAqB,OAAO,GAAE;IACL,OAAO,IAAI,CAACrB,IAAI;EACpB;EACAsB,eAAe,CAACrB,YAAY,EAAC;IACzB,IAAI,CAACA,YAAY,GAACA,YAAY;EAClC;EAEAsB,eAAe,GAAE;IACb,OAAO,IAAI,CAACtB,YAAY;EAC5B;AACJ;AAEA,IAAIuB,QAAQ,GAAC,IAAI7B,SAAS,EAAE;AAC5B6B,QAAQ,CAACtB,UAAU,EAAE;AACrB,eAAesB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}