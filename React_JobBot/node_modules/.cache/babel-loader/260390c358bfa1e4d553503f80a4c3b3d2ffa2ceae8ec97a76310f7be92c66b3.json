{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport JobCard from \"./JobCard.jsx\";\n\n// const doubleArray = (arr) => {\n//   return arr.map((e) => e * 2)\n// }\n\n// const filterArray = (arr, id) => {\n//   return arr.filter((e) => e.id !== id)\n// }\n\n// const sumArray = (arr, initialValue) => {\n//   return arr.reduce(((e, accu) => accu + e), initialValue)\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const filterObjectsById = (objects, selectedObjects) => {\n  let filteredObjects = [];\n  objects.map(obj => {\n    if (selectedObjects.includes(obj._id)) {\n      //#מתוך סך העבודות כולם הצג את כל העבודות שנבחרו בכל השלבים\n      filteredObjects.push(obj);\n    }\n  });\n  return filteredObjects;\n};\nconst DisplaySelectedJobs = props => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedJobId, setSelectedJobId] = useState(null);\n  useEffect(() => {\n    var jobs = props.node.getSavedInDB()[\"displayed jobs\"];\n    var selectedJobs = props.node.getSavedInDB()[\"selected jobs\"];\n    //var selectedJobsDetails=[];\n    const selectedJobsDetails = filterObjectsById(jobs, selectedJobs);\n    // jobs.map((job)=>{\n    //   if(selectedJobs.includes(job._id)){//#מתוך סך העבודות כולם הצג את כל העבודות שנבחרו בכל השלבים\n    //     selectedJobsDetails.push(job);\n    //   }\n    // })\n    setOptions(selectedJobsDetails);\n  }, []);\n  const onCardClick = id => {\n    setSelectedJobId(selectedJobId === id ? null : id);\n  };\n  const buttonsMarkup = options.map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n    job: job,\n    isSelected: job._id === selectedJobId,\n    onCardClick: onCardClick\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: buttonsMarkup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(DisplaySelectedJobs, \"AtcRFKeD0sTn8nt1QRKZm+1GRFg=\");\n_c = DisplaySelectedJobs;\nexport default DisplaySelectedJobs;\nvar _c;\n$RefreshReg$(_c, \"DisplaySelectedJobs\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","filterObjectsById","objects","selectedObjects","filteredObjects","map","obj","includes","_id","push","DisplaySelectedJobs","props","options","setOptions","selectedJobId","setSelectedJobId","jobs","node","getSavedInDB","selectedJobs","selectedJobsDetails","onCardClick","id","buttonsMarkup","job","index"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport JobCard from \"./JobCard.jsx\"\r\n\r\n// const doubleArray = (arr) => {\r\n//   return arr.map((e) => e * 2)\r\n// }\r\n\r\n// const filterArray = (arr, id) => {\r\n//   return arr.filter((e) => e.id !== id)\r\n// }\r\n\r\n// const sumArray = (arr, initialValue) => {\r\n//   return arr.reduce(((e, accu) => accu + e), initialValue)\r\n// }\r\n\r\nexport const filterObjectsById = (objects, selectedObjects) => {\r\n  let filteredObjects=[];\r\n  objects.map((obj)=>{\r\n    if(selectedObjects.includes(obj._id)){//#מתוך סך העבודות כולם הצג את כל העבודות שנבחרו בכל השלבים\r\n      filteredObjects.push(obj);\r\n    }\r\n  })\r\n  return filteredObjects\r\n}\r\n\r\nconst DisplaySelectedJobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedJobId, setSelectedJobId] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    var jobs=props.node.getSavedInDB()[\"displayed jobs\"];\r\n    var selectedJobs=props.node.getSavedInDB()[\"selected jobs\"];\r\n    //var selectedJobsDetails=[];\r\n    const selectedJobsDetails = filterObjectsById(jobs, selectedJobs)\r\n    // jobs.map((job)=>{\r\n    //   if(selectedJobs.includes(job._id)){//#מתוך סך העבודות כולם הצג את כל העבודות שנבחרו בכל השלבים\r\n    //     selectedJobsDetails.push(job);\r\n    //   }\r\n    // })\r\n    setOptions(selectedJobsDetails)\r\n  },[]);\r\n\r\n  const onCardClick = (id) => {\r\n    setSelectedJobId(selectedJobId === id ? null : id);\r\n  };\r\n\r\n  const buttonsMarkup = options.map((job,index) => (\r\n    <JobCard\r\n    key={index}\r\n    job={job}\r\n    isSelected={job._id === selectedJobId}\r\n    onCardClick={onCardClick}\r\n    />\r\n  ),[]);\r\n\r\n\r\n  return <div>{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default DisplaySelectedJobs;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAExC,OAAOC,OAAO,MAAM,eAAe;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,OAAO,EAAEC,eAAe,KAAK;EAC7D,IAAIC,eAAe,GAAC,EAAE;EACtBF,OAAO,CAACG,GAAG,CAAEC,GAAG,IAAG;IACjB,IAAGH,eAAe,CAACI,QAAQ,CAACD,GAAG,CAACE,GAAG,CAAC,EAAC;MAAC;MACpCJ,eAAe,CAACK,IAAI,CAACH,GAAG,CAAC;IAC3B;EACF,CAAC,CAAC;EACF,OAAOF,eAAe;AACxB,CAAC;AAED,MAAMM,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAI;IACZ,IAAIiB,IAAI,GAACL,KAAK,CAACM,IAAI,CAACC,YAAY,EAAE,CAAC,gBAAgB,CAAC;IACpD,IAAIC,YAAY,GAACR,KAAK,CAACM,IAAI,CAACC,YAAY,EAAE,CAAC,eAAe,CAAC;IAC3D;IACA,MAAME,mBAAmB,GAAGnB,iBAAiB,CAACe,IAAI,EAAEG,YAAY,CAAC;IACjE;IACA;IACA;IACA;IACA;IACAN,UAAU,CAACO,mBAAmB,CAAC;EACjC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,WAAW,GAAIC,EAAE,IAAK;IAC1BP,gBAAgB,CAACD,aAAa,KAAKQ,EAAE,GAAG,IAAI,GAAGA,EAAE,CAAC;EACpD,CAAC;EAED,MAAMC,aAAa,GAAGX,OAAO,CAACP,GAAG,CAAC,CAACmB,GAAG,EAACC,KAAK,kBAC1C,QAAC,OAAO;IAER,GAAG,EAAED,GAAI;IACT,UAAU,EAAEA,GAAG,CAAChB,GAAG,KAAKM,aAAc;IACtC,WAAW,EAAEO;EAAY,GAHpBI,KAAK;IAAA;IAAA;IAAA;EAAA,QAKX,EAAC,EAAE,CAAC;EAGL,oBAAO;IAAA,UAAMF;EAAa;IAAA;IAAA;IAAA;EAAA,QAAO;AACnC,CAAC;AAAC,GAhCIb,mBAAmB;AAAA,KAAnBA,mBAAmB;AAkCzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}