{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.greet = () => {\n      const message = this.createChatBotMessage(\"Hello friend.\");\n      this.addMessageToState(message);\n    };\n    this.handleField = (node, opt) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].children[1].text, {\n        widget: \"jobTitles\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        field: opt\n      });\n      node.setNextResponse(node.getNextResponse().children[0].children[1]);\n      this.addMessageToState(message);\n    };\n    this.handleOtherField = (node, opt) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].children[0].text, {\n        widget: \"approval\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        field: opt\n      });\n      node.setNextResponse(node.getNextResponse().children[0].children[0]);\n      this.addMessageToState(message);\n    };\n    this.handleJobTitle = (node, opts) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].text, {\n        widget: \"companies\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        'job titles': opts\n      });\n      node.setNextResponse(node.getNextResponse().children[0]);\n      this.addMessageToState(message);\n    };\n    this.handleCompany = (node, opts) => {\n      const message1 = this.createChatBotMessage(node.getNextResponse().children[0].text);\n      this.addMessageToState(message1);\n      const message2 = this.createChatBotMessage(node.getNextResponse().children[0].children[0].text, {\n        widget: \"areas\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        companies: opts\n      });\n      node.setNextResponse(node.getNextResponse().children[0].children[0]);\n      this.addMessageToState(message2);\n    };\n    this.addMessageToState = message => {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          messages: [...prevState.messages, message]\n        };\n      });\n    };\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  handleApproval(node, opt) {\n    const message = this.createChatBotMessage(node.getNextResponse().children[0].text);\n    node.setSelected({\n      ...node.getSelected(),\n      approval: opt\n    });\n    node.setNextResponse(node.getNextResponse().children[0]);\n    this.addMessageToState(message);\n  }\n  handleArea(node, opts) {\n    const message1 = this.createChatBotMessage(node.getNextResponse().children[0].text);\n    this.addMessageToState(message1);\n    const message2 = this.createChatBotMessage(node.getNextResponse().children[0].children[0].text, {\n      widget: \"jobTypes\"\n    });\n    node.setSelected({\n      ...node.getSelected(),\n      areas: opts\n    });\n    node.setNextResponse(node.getNextResponse().children[0].children[0]);\n    this.addMessageToState(message2);\n  }\n  handleJobType(node, opts) {\n    const message = this.createChatBotMessage(node.getNextResponse().children[0].text, {\n      widget: \"\"\n    });\n    node.setSelected({\n      ...node.getSelected(),\n      'job Types': opts\n    });\n    console.log(node.getSelected());\n    node.setNextResponse(node.getNextResponse().children[0]);\n    this.addMessageToState(message);\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","greet","message","addMessageToState","handleField","node","opt","getNextResponse","children","text","widget","setSelected","getSelected","field","setNextResponse","handleOtherField","handleJobTitle","opts","handleCompany","message1","message2","companies","setState","prevState","messages","handleApproval","approval","handleArea","areas","handleJobType","console","log"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/ActionProvider.js"],"sourcesContent":["class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  greet = () => {\r\n    const message = this.createChatBotMessage(\"Hello friend.\");\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleField = (node,opt) => {\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[1].text,\r\n      {\r\n        widget: \"jobTitles\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),field:opt})\r\n    node.setNextResponse(node.getNextResponse().children[0].children[1])\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleOtherField = (node,opt)=>{\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[0].text,\r\n      {\r\n        widget: \"approval\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),field:opt});\r\n    node.setNextResponse(node.getNextResponse().children[0].children[0])\r\n    this.addMessageToState(message);\r\n  }\r\n\r\n  handleApproval(node,opt){\r\n    const message = this.createChatBotMessage(node.getNextResponse().children[0].text);\r\n    node.setSelected({...node.getSelected(),approval:opt});\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    this.addMessageToState(message);\r\n  }\r\n\r\n  handleJobTitle = (node,opts) => {\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].text,\r\n      {\r\n        widget: \"companies\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),'job titles':opts})\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleCompany = (node,opts) => {\r\n    const message1=this.createChatBotMessage(node.getNextResponse().children[0].text);\r\n    this.addMessageToState(message1);\r\n    const message2 = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[0].text,\r\n      {\r\n        widget: \"areas\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),companies:opts})\r\n    node.setNextResponse(node.getNextResponse().children[0].children[0])\r\n    this.addMessageToState(message2);\r\n  };\r\n\r\n  handleArea(node,opts){\r\n    const message1=this.createChatBotMessage(node.getNextResponse().children[0].text);\r\n    this.addMessageToState(message1);\r\n    const message2 = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[0].text,\r\n      {\r\n        widget: \"jobTypes\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(), areas:opts})\r\n    node.setNextResponse(node.getNextResponse().children[0].children[0])\r\n    this.addMessageToState(message2);\r\n  }\r\n\r\n  handleJobType(node,opts){\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].text,\r\n      {\r\n        widget: \"\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),'job Types':opts})\r\n    console.log(node.getSelected())\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    this.addMessageToState(message);\r\n  }\r\n\r\n  addMessageToState = (message) => {\r\n    this.setState((prevState) =>{\r\n      return {\r\n      ...prevState,\r\n      messages: [...prevState.messages, message],\r\n      };\r\n    });\r\n  };\r\n\r\n}\r\n\r\nexport default ActionProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}