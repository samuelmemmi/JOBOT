{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.greet = () => {\n      const message = this.createChatBotMessage(\"Hello friend.\");\n      this.addMessageToState(message);\n    };\n    this.handleField = (node, opt) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].children[1].text, {\n        widget: \"jobTitles\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        field: opt\n      });\n      node.setNextResponse(node.getNextResponse().children[0].children[1]);\n      console.log(node.getSelected());\n      this.addMessageToState(message);\n    };\n    this.handleOtherField = (node, opt) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].children[0].text, {\n        widget: \"approval\"\n      });\n      // this.addNodeToState(nodes[0]);\n      node.setSelected({\n        ...node.getSelected(),\n        field: opt\n      });\n      // var x=node.getSelected();\n      console.log(\"Selected Params \", node.getSelected());\n      node.setNextResponse(node.getNextResponse().children[0].children[0]);\n      this.addMessageToState(message);\n    };\n    this.handleJobTitle = (node, opts) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].text, {\n        widget: \"Companies\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        'job titles': opts\n      });\n      node.setNextResponse(node.getNextResponse().children[0]);\n      console.log(\"In handle \", node.getSelected());\n      this.addMessageToState(message);\n    };\n    this.handleComapny = (node, opts) => {\n      const message = this.createChatBotMessage(node.getNextResponse().children[0].text, {\n        widget: \"\"\n      });\n      node.setSelected({\n        ...node.getSelected(),\n        'companies': opts\n      });\n      node.setNextResponse(node.getNextResponse().children[0]);\n      console.log(\"In handle \", node.getSelected());\n      this.addMessageToState(message);\n    };\n    this.addMessageToState = message => {\n      this.setState(prevState => {\n        // console.log(prevState.messages[prevState.messages.length-1].message+\" LOOOLOOO\"+x)\n        console.log(\"Messages \", prevState.messages);\n        return {\n          ...prevState,\n          messages: [...prevState.messages, message]\n        };\n      });\n    };\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  handleApproval(node, opt) {\n    const message = this.createChatBotMessage(node.getNextResponse().children[0].text);\n    node.setSelected({\n      ...node.getSelected(),\n      approval: opt\n    });\n    node.setNextResponse(node.getNextResponse().children[0]);\n    this.addMessageToState(message);\n    console.log(\"SELECTED OTHER FLOW \", node.getSelected());\n  }\n\n  //mine\n  // addNodeToState = (node) => {\n  //   this.setState((prevState) => ({\n  //     ...prevState,\n  //     nodes: [...prevState.nodes, node],\n  //   }));\n  // };\n}\n\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","greet","message","addMessageToState","handleField","node","opt","getNextResponse","children","text","widget","setSelected","getSelected","field","setNextResponse","console","log","handleOtherField","handleJobTitle","opts","handleComapny","setState","prevState","messages","handleApproval","approval"],"sources":["C:/Users/Rachel/source/repos/JOBOT/JOBOT/React_JobBot/src/pages/chatBotLogic/ActionProvider.js"],"sourcesContent":["class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  greet = () => {\r\n    const message = this.createChatBotMessage(\"Hello friend.\");\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleField = (node,opt) => {\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[1].text,\r\n      {\r\n        widget: \"jobTitles\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),field:opt})\r\n    node.setNextResponse(node.getNextResponse().children[0].children[1])\r\n    console.log(node.getSelected())\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleOtherField = (node,opt)=>{\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].children[0].text,\r\n      {\r\n        widget: \"approval\",\r\n      }\r\n    );\r\n    // this.addNodeToState(nodes[0]);\r\n    node.setSelected({...node.getSelected(),field:opt});\r\n    // var x=node.getSelected();\r\n    console.log(\"Selected Params \",node.getSelected())\r\n    node.setNextResponse(node.getNextResponse().children[0].children[0])\r\n    this.addMessageToState(message);\r\n  }\r\n\r\n  handleApproval(node,opt){\r\n    const message = this.createChatBotMessage(node.getNextResponse().children[0].text);\r\n    node.setSelected({...node.getSelected(),approval:opt});\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    this.addMessageToState(message);\r\n    console.log(\"SELECTED OTHER FLOW \",node.getSelected())\r\n\r\n  }\r\n\r\n  handleJobTitle = (node,opts) => {\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].text,\r\n      {\r\n        widget: \"Companies\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),'job titles':opts})\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    console.log(\"In handle \",node.getSelected())\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleComapny = (node,opts) => {\r\n    const message = this.createChatBotMessage(\r\n      node.getNextResponse().children[0].text,\r\n      {\r\n        widget: \"\",\r\n      }\r\n    );\r\n    node.setSelected({...node.getSelected(),'companies':opts})\r\n    node.setNextResponse(node.getNextResponse().children[0])\r\n    console.log(\"In handle \",node.getSelected())\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  addMessageToState = (message) => {\r\n    this.setState((prevState) =>{\r\n      // console.log(prevState.messages[prevState.messages.length-1].message+\" LOOOLOOO\"+x)\r\n      console.log(\"Messages \",prevState.messages);\r\n      return {\r\n      ...prevState,\r\n      messages: [...prevState.messages, message],\r\n      };\r\n    });\r\n  };\r\n\r\n//mine\r\n  // addNodeToState = (node) => {\r\n  //   this.setState((prevState) => ({\r\n  //     ...prevState,\r\n  //     nodes: [...prevState.nodes, node],\r\n  //   }));\r\n  // };\r\n}\r\n\r\nexport default ActionProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}