{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport JobCard from \"./JobCard.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplaySelectedJobs = props => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedJobId, setSelectedJobId] = useState(null);\n  useEffect(() => {\n    var selectedJobsDetails = [];\n    //????????ואז לאחד את 2 רשימות העבודות\n    props.node.getJobs().map(job => {\n      if (props.node.getSelectedJobs().includes(job.id.toString())) {\n        selectedJobsDetails.push(job);\n      }\n    });\n    setOptions(selectedJobsDetails);\n  }, []);\n  const onCardClick = id => {\n    setSelectedJobId(selectedJobId === id ? null : id);\n  };\n  const buttonsMarkup = options.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n    job: job,\n    isSelected: job.id === selectedJobId,\n    onCardClick: onCardClick\n  }, job.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: buttonsMarkup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(DisplaySelectedJobs, \"AtcRFKeD0sTn8nt1QRKZm+1GRFg=\");\n_c = DisplaySelectedJobs;\nexport default DisplaySelectedJobs;\nvar _c;\n$RefreshReg$(_c, \"DisplaySelectedJobs\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","DisplaySelectedJobs","props","options","setOptions","selectedJobId","setSelectedJobId","selectedJobsDetails","node","getJobs","map","job","getSelectedJobs","includes","id","toString","push","onCardClick","buttonsMarkup"],"sources":["/Users/macbook/Desktop/Chatbot/JOBOT/React_JobBot/src/pages/chatBotLogic/components/Options/DisplaySelectedJobs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport JobCard from \"./JobCard.jsx\"\r\n\r\nconst DisplaySelectedJobs = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedJobId, setSelectedJobId] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    var selectedJobsDetails=[];\r\n    //????????ואז לאחד את 2 רשימות העבודות\r\n    props.node.getJobs().map((job)=>{\r\n      if(props.node.getSelectedJobs().includes(job.id.toString())){\r\n        selectedJobsDetails.push(job);\r\n      }\r\n    })\r\n    setOptions(selectedJobsDetails)\r\n  },[]);\r\n\r\n  const onCardClick = (id) => {\r\n    setSelectedJobId(selectedJobId === id ? null : id);\r\n  };\r\n\r\n  const buttonsMarkup = options.map((job) => (\r\n    <JobCard\r\n    key={job.id}\r\n    job={job}\r\n    isSelected={job.id === selectedJobId}\r\n    onCardClick={onCardClick}\r\n    />\r\n  ),[]);\r\n\r\n\r\n  return <div>{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default DisplaySelectedJobs;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAExC,OAAOC,OAAO,MAAM,eAAe;AAAA;AAEnC,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAI;IACZ,IAAIQ,mBAAmB,GAAC,EAAE;IAC1B;IACAL,KAAK,CAACM,IAAI,CAACC,OAAO,EAAE,CAACC,GAAG,CAAEC,GAAG,IAAG;MAC9B,IAAGT,KAAK,CAACM,IAAI,CAACI,eAAe,EAAE,CAACC,QAAQ,CAACF,GAAG,CAACG,EAAE,CAACC,QAAQ,EAAE,CAAC,EAAC;QAC1DR,mBAAmB,CAACS,IAAI,CAACL,GAAG,CAAC;MAC/B;IACF,CAAC,CAAC;IACFP,UAAU,CAACG,mBAAmB,CAAC;EACjC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMU,WAAW,GAAIH,EAAE,IAAK;IAC1BR,gBAAgB,CAACD,aAAa,KAAKS,EAAE,GAAG,IAAI,GAAGA,EAAE,CAAC;EACpD,CAAC;EAED,MAAMI,aAAa,GAAGf,OAAO,CAACO,GAAG,CAAEC,GAAG,iBACpC,QAAC,OAAO;IAER,GAAG,EAAEA,GAAI;IACT,UAAU,EAAEA,GAAG,CAACG,EAAE,KAAKT,aAAc;IACrC,WAAW,EAAEY;EAAY,GAHpBN,GAAG,CAACG,EAAE;IAAA;IAAA;IAAA;EAAA,QAKZ,EAAC,EAAE,CAAC;EAGL,oBAAO;IAAA,UAAMI;EAAa;IAAA;IAAA;IAAA;EAAA,QAAO;AACnC,CAAC;AAAC,GA9BIjB,mBAAmB;AAAA,KAAnBA,mBAAmB;AAgCzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}